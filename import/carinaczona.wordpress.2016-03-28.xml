<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.4.2" created="2016-03-28 21:03" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Carina C. Zona</title>
	<link>http://cczona.com/blog</link>
	<description>See. Do. Teach.</description>
	<pubDate>Mon, 28 Mar 2016 21:03:29 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://cczona.com/blog</wp:base_site_url>
	<wp:base_blog_url>http://cczona.com/blog</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[admin]]></wp:author_login><wp:author_email><![CDATA[cczona@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[admin]]></wp:author_display_name><wp:author_first_name><![CDATA[Carina C.]]></wp:author_first_name><wp:author_last_name><![CDATA[Zon]]></wp:author_last_name></wp:author>


	<generator>https://wordpress.org/?v=4.4.2</generator>

	<item>
		<title>Programming Perfection</title>
		<link>http://cczona.com/blog/programming-perfection/</link>
		<pubDate>Mon, 26 Sep 2011 05:02:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignnone" title="The only valid measurement of code quality" src="http://i.stack.imgur.com/hP33m.jpg" alt="The only valid measurement of code quality: WTFs per minute." width="500" height="448" />

When I was starting out in this field, I was afraid to ask questions where a future client might see them, or to give my real name on a professional forum. Surely real programmers would be incensed that someone was paying for my clumsy work. After all, how good could I be if I had bugs or indeed questions at all?

The phrase you're looking for is <a href="http://sciencecareers.sciencemag.org/career_magazine/previous_issues/articles/2008_02_15/caredit.a0800025&quot;">Imposter Syndrome</a>.

It's been a bunch of years, and I've acquired a lot more skills. I've made clients, and their clients, very happy. I've taught. I've done tech support.  It's a pleasure to be able to lend a hand to stuck peers.  And I still feel like I don't know enough.

Never will. For one thing, because website development is a field that moves fast and is ever-changing. For another, we deploy for an environment in which the combination of variables — browser implementations of specs, viewport size, connection speed, user expectations &amp; needs — is close enough to infinite that we never get to be certain of having covered all bases.  The job requires acceptance of the inevitability that something, somewhere, is going to make an unpleasant surprise.  The best we can do is minimize the odds.

Development always conjures up amused memories for me of the carnival game Whack-A-Mole. Whack one successfully, and two or three more immediately pop up in other places. WTF. It's the damned moles who win, if you approach it as a zero-sum game.

<em>Driving the WTF rate down; not unrealistic fantasies of zero.</em>

Yeah. Now there's a metric worth using.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date><![CDATA[2011-09-25 22:02:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-26 05:02:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[programming-perfection]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Am I writing code that I can explain?</title>
		<link>http://cczona.com/blog/am-i-writing-code-that-i-can-explain/</link>
		<pubDate>Mon, 26 Sep 2011 17:15:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>My coding skill improved a lot when I started wondering before implementing something <em>how am I going to document this thing</em>.

"Thing" here should have all the possible granularity. From the method to the whole product. For instance at the method level it prevents adding a method in the API that doesn't fit, or is unclear, before actually writing it. And if I really need to implement a method I cannot document (easily), it's a sign there is a design problem somewhere...

Automatically, the attitude "<em>if I can't explain it, I don't write it</em>" filters out bad code and conversely once I know how to document correctly a thing, it becomes simpler and cleaner to implement.
<cite><a href="http://programmers.stackexchange.com/posts/44555/revisions">User kabado, on StackExchange</a></cite></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date><![CDATA[2011-09-26 10:15:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-26 17:15:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[am-i-writing-code-that-i-can-explain]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Schema.org - Full Heirarchy</title>
		<link>http://cczona.com/blog/schema-org-full-heirarchy/</link>
		<pubDate>Wed, 20 Jul 2011 04:15:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=785</guid>
		<description></description>
		<content:encoded><![CDATA[It takes a die-hard markup geek* to appreciate how sweeeeet this is: <a href="http://schema.org/docs/full.html">http://schema.org/docs/full.html</a>

// *hand raised]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>785</wp:post_id>
		<wp:post_date><![CDATA[2011-07-20 04:15:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-07-20 04:15:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[schema-org-full-heirarchy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Retirement Community for LGBT Seniors</title>
		<link>http://cczona.com/blog/retirement-community-for-lgbt-seniors/</link>
		<pubDate>Thu, 21 Jul 2011 04:18:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=787</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.oakmontvillage.com/">Oakmont is an enormous retirement community</a> east of Santa Rosa, CA.  Its developers are now building a retirement community for LGBT seniors in a luxury neighborhood of north Santa Rosa. The initiation fees and monthly fees clearly make this particular opportunity only viable for the wealthy. But I take it as progress that developers are convinced there's a big enough pool of people to make projects like this viable. I hope that its success will lead to some more affordable options being launched in the future.

Queer couples on average earn less than heterosexual counterparts, and that income gap widens for couples who raise children, for lesbian couples, and for non-white couples. The Defense of Marriage Act widens the gap further for aging, by denying access to a partner's federal pension, Medicaid long-term care benefits, and Social Security benefits. All of which adds up to an LGBT senior population with disproportionate need for affordable retirement housing.

PBS aired "A Place to Live" in June about the opening of the nation's first low-income housing project for LGBT seniors. The lottery applicants were each so emotionally invested. For some it represented the first opportunity in their lives to potentially get to be "out" in their own homes without fear of eviction. If it runs again, catch it. I enjoyed it thoroughly.

<a href="http://www.greatreporter.com/content/same-sex-couples-earn-less-heterosexuals">http://www.greatreporter.com/content/same-sex-couples-earn-less-heterosexuals</a>

<a href="http://www3.law.ucla.edu/williamsinstitute/programs/CLE%20Materials%20for%20Web/Beyond%20Anti%20Discrimination%20Legislation.pdf">http://www3.law.ucla.edu/williamsinstitute/programs/CLE%20Materials%20for%20Web/Beyond%20Anti%20Discrimination%20Legislation.pdf</a>

<a href="http://www.programsforelderly.com/documentaries.html﻿">http://www.programsforelderly.com/documentaries.html﻿</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>787</wp:post_id>
		<wp:post_date><![CDATA[2011-07-21 04:18:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-07-21 04:18:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[retirement-community-for-lgbt-seniors]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Adult-ish Content in Online Communities</title>
		<link>http://cczona.com/blog/adult-ish-content-in-online-communities/</link>
		<pubDate>Fri, 22 Jul 2011 04:21:11 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=789</guid>
		<description></description>
		<content:encoded><![CDATA[Restricting adult-ish content without providing tools to self-moderate is a community design flaw. <a href="http://www.zdnet.com/blog/violetblue/google-plus-fast-cheap-and-out-of-control/557">Violet Blue elaborates, in "Google Plus: Fast, Cheap and Out of Control".</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>789</wp:post_id>
		<wp:post_date><![CDATA[2011-07-22 04:21:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-07-22 04:21:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[adult-ish-content-in-online-communities]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nearly Perfect Gluten-Free Chocolate Cookies!</title>
		<link>http://cczona.com/blog/nearly-perfect-gluten-free-chocolate-cookies/</link>
		<pubDate>Mon, 25 Jul 2011 04:24:35 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=791</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://glutenfreegirl.com/david-leites-chocolate-chip-cookies-gluten-free/">This recipe for gluten-free chocolate chip cookies</a> is nearly perfect, once the (bleck!) sorghum is substituted out in favor of almond flour. I don't stock amaranth, so swap in brown rice flour or millet flour there. And, wow, does the salt content need to be dialed back several notches.

It produces a nice chewy-on-the-inside-crumbly-on-the-outside cookie at 350 degrees. Normally I am hugely biased toward gooey when it comes to baked goods. But this dough turns sublime when baked to a meringue cookie-like crispness at 200 degrees. The difficulty there is that it takes ages to bake, while filling the house with irresistible aroma. Not fair.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>791</wp:post_id>
		<wp:post_date><![CDATA[2011-07-25 04:24:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-07-25 04:24:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nearly-perfect-gluten-free-chocolate-cookies]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scanner, Oh Joy!</title>
		<link>http://cczona.com/blog/scanner-oh-joy/</link>
		<pubDate>Mon, 25 Jul 2011 04:26:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=793</guid>
		<description></description>
		<content:encoded><![CDATA[Fast scanner + quality OCR + an OS that indexes PDFs + high-capacity shredder = satisfying feeling of getting closer to the dream of a (relatively-)paperless office.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>793</wp:post_id>
		<wp:post_date><![CDATA[2011-07-25 04:26:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-07-25 04:26:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[scanner-oh-joy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>On Koans &amp; Schemers</title>
		<link>http://cczona.com/blog/on-koans-schemers/</link>
		<pubDate>Wed, 27 Jul 2011 04:27:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=795</guid>
		<description></description>
		<content:encoded><![CDATA[I'm getting back up to speed on Ruby and Rails.

I learned back in the era of Ruby 1.8 and Rails 1.1.*. TDD and BDD were just emerging as topics of serious interest within the community. Oh, ye olden days!

I didn't use the skills for a couple of years, so they'd fallen fallow. Meanwhile, Ruby 1.9 introduced some syntactical changes that are backwards-incompatible and Rails, at 3.*, is apparently a different beast altogether. Between the three, it seemed best to start education over from beginner. No doubt uptake this time will go much quicker.

I'm enjoying the Ruby Koans. They're stirring fond memories of The Little Schemer. The koans are kind of a hippy-dippy, cheat-sheet included, test-driven, Little Schemer Lite.

The Little Schemer was considerably more challenging and abstract/conceptual. But both teach through code itself; an uncommon approach, that keeps my mind happily engaged with problem-solving. Any recommendations for more advanced Ruby tutorials that use similar methodology? (_why's guide drove me crazy last time, FYI)﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>795</wp:post_id>
		<wp:post_date><![CDATA[2011-07-27 04:27:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-07-27 04:27:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[on-koans-schemers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Grade B == A++</title>
		<link>http://cczona.com/blog/grade-b-a/</link>
		<pubDate>Mon, 01 Aug 2011 04:30:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=797</guid>
		<description></description>
		<content:encoded><![CDATA[ 
Booyah. Grade B maple syrup is being stocked at Trader Joe's. Usually it's hard to find on this coast, so it was a nice surprise to find it in large supply.﻿

The public has been bamboozled into paying through the nose for grade A, which is vastly inferior.

Inexpensive maple-y goodness, hi ho!﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>797</wp:post_id>
		<wp:post_date><![CDATA[2011-08-01 04:30:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-01 04:30:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[grade-b-a]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dear Restauranteur</title>
		<link>http://cczona.com/blog/dear-restauranteur/</link>
		<pubDate>Wed, 10 Aug 2011 04:32:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=799</guid>
		<description></description>
		<content:encoded><![CDATA[Dear Restauranteur:

You are very pleased with your site's dazzling Flash-based interface, aren't you? Stop. Please, just stop, for your own sake. Use HTML. Put your phone number, address on every page. Post the menu; also in HTML. Fall out of love with uber-snazziness, and give me super-easy access to the info that lets me buy a meal from you. We will all be happier.

That is all.

See also: <a href="http://theoatmeal.com/comics/restaurant_website﻿">"What I want from a restaurant website</a> by The Oatmeal.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>799</wp:post_id>
		<wp:post_date><![CDATA[2011-08-10 04:32:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-08-10 04:32:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dear-restauranteur]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[799]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Free Intro to Databases</title>
		<link>http://cczona.com/blog/free-intro-to-databases/</link>
		<pubDate>Thu, 01 Sep 2011 04:40:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=804</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.db-class.com/">Stanford has an upcoming free online course in databases that they're calling intro-level.</a> But the course description encompasses a lot of good topics beyond SQL that you don't usually get to chew on at that level:

<ul>
	<li>XML, DTDs, XML Schema</li>
	<li>XPath, XQuery, XSLT</li>
	<li>UML</li>
	<li>OLAP</li>
	<li>noSQL</li>
</ul>

<em>(found via DevChix)</em>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>804</wp:post_id>
		<wp:post_date><![CDATA[2011-09-01 04:40:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-01 04:40:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[free-intro-to-databases]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cookie Throwdown</title>
		<link>http://cczona.com/blog/cookie-throwdown/</link>
		<pubDate>Thu, 01 Sep 2011 04:45:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=807</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.wired.com/magazine/2011/08/st_datagirlscoutcookies/﻿">Good use of infographics.</a> Also, handy resource for the next time there's a religious war over Thin Mints vs. Trefoils. The people have spoken. Thin Mints win by a mile.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>807</wp:post_id>
		<wp:post_date><![CDATA[2011-09-01 04:45:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-01 04:45:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cookie-throwdown]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Groannn.</title>
		<link>http://cczona.com/blog/groan/</link>
		<pubDate>Thu, 01 Sep 2011 04:48:06 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=809</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>"Canonical and the Ubuntu developers have released the first beta for version 11.10 of their Linux distribution, code-named "Oneiric Ocelot". Based on Linux 3.0.1, the beta includes improvements to the Unity interface.."</blockquote>

I was really hoping that sentence would end "...by which we mean it now defaults to 'off'. You're welcome, Ubuntu community."

Thankfully, it's easy to boot into Ubuntu Classic Desktop -- which is also a UI disaster zone, but at least lets me get stuff done.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>809</wp:post_id>
		<wp:post_date><![CDATA[2011-09-01 04:48:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-01 04:48:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[groan]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[809]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Post-racial&quot;</title>
		<link>http://cczona.com/blog/post-racial/</link>
		<pubDate>Sat, 03 Sep 2011 04:51:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=813</guid>
		<description></description>
		<content:encoded><![CDATA[Household median net worth 2011 (2005): 

<strong>$113k (135k) whites</strong>
$6k ($12k) blacks
$6 ($19k) Hispanics 


Unemployment rate:

8.2% whites
16.8% blacks
11.3% Latinos

Extraordinary that we're able to hold up the pretense of being a "postracial" society.

Source: <a href="http://www.nytimes.com/2011/09/03/opinion/on-race-the-silence-is-bipartisan.html﻿">"On Race, the Silence Is Bipartisan﻿"</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>813</wp:post_id>
		<wp:post_date><![CDATA[2011-09-03 04:51:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-03 04:51:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[post-racial]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tech Books</title>
		<link>http://cczona.com/blog/tech-books/</link>
		<pubDate>Sat, 03 Sep 2011 04:55:57 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=818</guid>
		<description></description>
		<content:encoded><![CDATA[Manning Publications 50% off eBooks, today-only promo code: "dotd0903cc". 

Manning, O'Reilly, and Pragmatic are among (stand alone as?) the few tech publishers who don't DRM their ebooks. They even typically provide multiple formats (typically PDF/Mobi/ePub) for single ebook purchase price. Whahoo. Quality textbooks, and a business model worth supporting.

I took the opportunity to get the WIP of "SASS and Compass In Action". What's there looks promising.

Pragmatic's got the only other SASS books I could find, and oh my is the tone excessively conversational and head-patting patronizing. Tech textbooks: <em>knock it off, please</em>. "Metaprogramming Ruby", also from Pragmatic, takes this style to hellish lengths. So much good, meaty subject to teach; buried in cruft and making me grit my teeth.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>818</wp:post_id>
		<wp:post_date><![CDATA[2011-09-03 04:55:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-03 04:55:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[tech-books]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Google+ API</title>
		<link>http://cczona.com/blog/google-api/</link>
		<pubDate>Sun, 25 Sep 2011 04:58:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=821</guid>
		<description></description>
		<content:encoded><![CDATA[Google cleverly has chosen to make their G+ API read-only. So if you want to publish once to hit multiple downstreams, gee-willikers looks like you'll just have to do that from Google+.

If the goal is to increase community size and loyalty, ditching the hostility toward nyms would be a far more productive way to go about it.

(And releasing a kickass <em>bi-directional</em> API would eliminate a lot of wariness about migrating.)﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>821</wp:post_id>
		<wp:post_date><![CDATA[2011-09-25 04:58:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-25 04:58:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[google-api]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>15 Reasons Mr. Rogers Was The Best Neighbor Ever</title>
		<link>http://cczona.com/blog/15-reasons-mr-rogers-was-the-best-neighbor-ever/</link>
		<pubDate>Wed, 11 Feb 2009 18:12:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/15-reasons-mr-rogers-was-the-best-neighbor-ever/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href='http://blogs.static.mentalfloss.com/blogs/archives/20005.html'>15 Reasons Mr. Rogers Was The Best Neighbor Ever</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>869</wp:post_id>
		<wp:post_date><![CDATA[2009-02-11 18:12:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2009-02-11 18:12:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[15-reasons-mr-rogers-was-the-best-neighbor-ever]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_permalink]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://sklunklish.tumblr.com/post/77515340/15-reasons-mr-rogers-was-the-best-neighbor-ever]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[77515340]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gay marriage: the database engineering perspective</title>
		<link>http://cczona.com/blog/gay-marriage-the-database-engineering-perspective/</link>
		<pubDate>Mon, 24 Nov 2008 02:35:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/gay-marriage-the-database-engineering-perspective/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href='http://qntm.org/?gay'>Gay marriage: the database engineering perspective</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>873</wp:post_id>
		<wp:post_date><![CDATA[2008-11-24 02:35:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-11-24 02:35:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gay-marriage-the-database-engineering-perspective]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_permalink]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://sklunklish.tumblr.com/post/61239560/gay-marriage-the-database-engineering-perspective]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[61239560]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What A Community Organizer Does</title>
		<link>http://cczona.com/blog/what-a-community-organizer-does/</link>
		<pubDate>Mon, 08 Sep 2008 04:48:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/what-a-community-organizer-does/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href='http://www.catholicdemocrats.org/news/2008/09/palin_attacks_catholic_communi.php'>What A Community Organizer Does</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>875</wp:post_id>
		<wp:post_date><![CDATA[2008-09-08 04:48:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2008-09-08 04:48:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[what-a-community-organizer-does]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_permalink]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://sklunklish.tumblr.com/post/49202805/what-a-community-organizer-does]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[49202805]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The swiss army knife of bash command completion</title>
		<link>http://cczona.com/blog/the-swiss-army-knife-of-bash-command-completion/</link>
		<pubDate>Wed, 19 Dec 2007 07:44:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/the-swiss-army-knife-of-bash-command-completion/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href='http://linux.byexamples.com/archives/275/cli-magic-programable-bash-completion/'>The swiss army knife of bash command completion</a><div class="link_description"><p>Oh bloody hell.  Why didn&#8217;t someone tell me about this eons ago.  My commandline just got sweet:</p>

<p><code>port install bash-completion</code></p>

<p>Can&#8217;t remember a command flag?  Bash will prompt with all the available options.   Tired of typing a hostnames for every SSH login?  Bash will complete it for you.  And on, and on&#8230;  Heaven.</p>

<p>And it only gets better after you set <a href="http://rumour.biology.gatech.edu/Computers/cdpath.shtml">CDPATH</a> to a few of your favorite directories.  I may never have to type a full path again.</p>

<p>Can we get this for browsers, please?  Their whole-line autocomplete is so primitive by comparison.</p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>893</wp:post_id>
		<wp:post_date><![CDATA[2007-12-19 07:44:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2007-12-19 07:44:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[the-swiss-army-knife-of-bash-command-completion]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-link"><![CDATA[Link]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_permalink]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://sklunklish.tumblr.com/post/21942477/the-swiss-army-knife-of-bash-command-completion]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[tumblr_sklunklish_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[21942477]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bebugger</title>
		<link>http://cczona.com/blog/bebugger/</link>
		<pubDate>Tue, 27 Sep 2011 03:52:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Heard in programming class:</p>

<blockquote><em>"Is there a better bebugger for this?"</em>
<img class="alignnone" title="Fly Swatter by bnielsen (openclipart.com)" src="http://www.openclipart.org/people/bnielsen/Swatter.svg" alt="Fly swatter" width="600" height="500" /></blockquote>

<p>Indeed. <strong>"Bebugger"</strong> must enter the lexicon immediately. Rife with versatility.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date><![CDATA[2011-09-26 20:52:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-27 03:52:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[bebugger]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Editing via less</title>
		<link>http://cczona.com/blog/editing-via-less/</link>
		<pubDate>Wed, 28 Sep 2011 07:40:03 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[	<p>Do you ever do this?</p>

	<p><code>$ less myfile</code></p>

	<p>(View some stuff... Ah-hah, I need to make some changes in this&mdash;)</p>

	<p><code>$ editor myfile</code></p>

	<p>Here's a nice shortcut: from within less, hit the 'v' key instead.  Voila, file open and read to edit.</p>

	<blockquote>
	<p><cite><code>man less</code> (OSX 10.6<sup>*</sup>)</cite></p>

	<dl>

		<dt><code>v</code></dt>

		<dd>
			Invokes an editor to edit the current file being viewed. The editor is taken from the environment variable <var>VISUAL</var> if defined, or <var>EDITOR</var> if <var>VISUAL</var> is not defined, or defaults to "vi" if neither <var>VISUAL</var> nor <var>EDITOR</var> is defined. See also the discussion of <var>LESSEDIT</var> under the section on PROMPTS below.
		</dd>

		<dt><var>LESSEDIT</var></dt>

		<dd>
			The default value for <var>LESSEDIT</var> is: <code>%E ?lm+%lm. %f</code>. Note that this expands to the editor name, followed by a + and the line number, followed by the file name. If your editor does not accept the "+linenumber" syntax, or has other differences in invocation syntax, the <var>LESSEDIT</var> variable can be changed to modify this default.
		</dd>
	</dl>

	</blockquote>

	<p>For example, the <a href="http://manual.macromates.com/en/using_textmate_from_terminal.html">documentation for TextMate</a> recommends <code>LESSEDIT='mate -l %lm %f'</code>.</p>

	<p>The 'v' shortcut only applies when less is reading a <em>file</em>. It's not applicable to reading standard input <abbr title="standard input">(STDIN)</abbr>.<p>

<aside><strong>*</strong>Not all implementations of less have this feature; but it's darned handy in those that do.</p></aside>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date><![CDATA[2011-09-28 00:40:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-28 07:40:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[editing-via-less]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_tweet_this]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_clig]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_bitly]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_wp]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_yourls]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_wp_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Client-side Ruby &amp; Py, whoa.</title>
		<link>http://cczona.com/blog/client-side-ruby-py-whoa/</link>
		<pubDate>Sun, 02 Oct 2011 09:06:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=66</guid>
		<description></description>
		<content:encoded><![CDATA[The convention wisdom used to be, "JavaScript is the client-side scripting language; Ruby and Python are server-side scripting languages."

In truth, <a href="http://en.wikipedia.org/wiki/Server-side_JavaScript">JavaScript has always been a server-side language too</a>.  Projects like <a href="http://nodejs.org/">node.js</a> have lately raised the visibility of that mightily.

Ahh, but what about potential for server-side languages to execute natively in a browser?

<a href="http://cczona.com/blog/wp-content/uploads/2011/10/1006052.png"><img src="http://cczona.com/blog/wp-content/uploads/2011/10/1006052.png" alt="" title="Screenshot of Gestalt example" width="878" height="357" class="aligncenter size-full wp-image-80" /></a>

<a href="http://visitmix.com/labs/gestalt/">Gestalt</a> is an interesting development on that front: taking advantage of Microsoft's Silverlight Dynamic Language Runtime (DLR) to bring Ruby and Python over to the client-side.

<p>A future of &lt;script type="text/ruby"&gt; could be groovy. </p>

<code>
  def onclick(s,e)
    window.alert "Hello, World!"
  end
  document.say_hello.attach_event(
    'onclick', 
    System::EventHandler[System::Windows::Browser::HtmlEventArgs].new(method(:onclick))
  )
</code>

<a href="http://www.microsoft.com/getsilverlight/get-started/install/default.aspx"><img src="http://cczona.com/blog/wp-content/uploads/2011/10/1006027-300x201.png" alt="" title="Microsoft Silverlight browser support matrix 2011-10-01" width="300" height="201" class="alignright size-medium wp-image-77" /></a>

Though I'll be a lot more excited about a solution not dependent on a plugin.  Silverlight is far from ubiquitous.  <a href="http://www.microsoft.com/getsilverlight/get-started/install/default.aspx">Even on Microsoft's own OSs, browser support is not universal.  And no love for Linux at all.</a>  That's some pretty major shortcomings.

But interesting, oh yes.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>66</wp:post_id>
		<wp:post_date><![CDATA[2011-10-02 02:06:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-02 09:06:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[client-side-ruby-py-whoa]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://cczona.com/blog/86/</link>
		<pubDate>Fri, 07 Oct 2011 01:58:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=86</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://agileinaflash.blogspot.com/2009/02/getting-un-stuck-in-tdd.html">A checklist from Agile in a Flash, for basic TDD-/BDD-style test writing</a>:
<ul>
	<li>Test that you can instantiate the class</li>
	<li>Tests that you can call the method at all.</li>
	<li>Pick the easiest bit of functionality.</li>
	<li>Pick the most interesting bit of functionality.</li>
	<li>Write the function name and assertion first</li>
	<li>Rename something</li>
	<li>Refactor the existing tests</li>
	<li>Switch partners</li>
	<li>Read the code for obvious flaws</li>
	<li>Rerun the autotest</li>
	<li>Reduce your scope</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>86</wp:post_id>
		<wp:post_date><![CDATA[2011-10-06 18:58:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-07 01:58:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[86]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MemoryFinder.lookup</title>
		<link>http://cczona.com/blog/memoryfinder-lookup/</link>
		<pubDate>Sat, 08 Oct 2011 04:58:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=89</guid>
		<description></description>
		<content:encoded><![CDATA[Ingenious.  Simple.  If you program in Ruby, check out the handy-dandy <a href="https://github.com/citizen428/methodfinder">MethodFinder</a> utility.  It's a prompt for your memory when you only <em>almost</em> remember which method name you want.  Or when you have no idea altogether.  You just give it a receiver and desired return value; it gives you a list of methods which, when sent to the receiver, return the specified value.

<h2>Install MethodFinder</h2>

<code>
$ gem install methodfinder
</code>

<small>(The method_finder gem is unrelated)</small>


<h2>Let the searches begin</h2>

If you require it in <code>.irbrc</code>, then irb sessions will have MethodFinder available automatically.

<code>
# .irbrc
begin; require 'methodfinder';             rescue LoadError => err; warn "#{err}"; end
</code>

Now let's fire up irb
<code>
$ irb
irb > MethodFinder.find('a', 0)
 => [:oct, :to_c, :to_f, :to_i, :to_r] 
irb > MethodFinder.find('a', 1)
 => [:bytesize, :length, :size] 
irb > MethodFinder.find('a', :a)
 => [:intern, :to_sym] 
irb > MethodFinder.find('a', String)
 => [:class]
irb > MethodFinder.find(10, 100)
  => [:abs2]
irb > MethodFinder.find(10,11)
  => [:next, :succ]
irb > MethodFinder.find('abc', 'Abc')
 => [:capitalize, :capitalize!] 
irb > MethodFinder.find('abc', 'cba')
 => [:reverse, :reverse!] 
irb > MethodFinder.find('abc', 'a')
 => [:chr] 
irb > MethodFinder.find('abc', 'ab')
 => [:chop, :chop!] 
irb > MethodFinder.find('abc', :abc)
 => [:intern, :to_sym]
irb > MethodFinder.find('abc', 'ABC')
 => [:swapcase, :swapcase!, :upcase, :upcase!]
irb > MethodFinder.find(0, true)
 => [:even?, :frozen?, :integer?, :real?, :zero?] 
irb > MethodFinder.find(0, false)
 => [:!, :nil?, :odd?, :tainted?, :untrusted?]
</code>

MethodFinder is looking for <em>return value</em>, so keep in mind that some methods don't have the return value that one might expect them to.  For instance, <code>IO#puts</code>, <code>IO#print</code>, and <code>IO#printf</code> send to standard out (<abbrev>STDOUT</abbrev>) while returning nil.

<h2>Get More Elaborate</h2>

The documentation demonstrates that more complex and/or granular searches are possible too.  You can inquire what method to use within a supplied block, for instance.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>89</wp:post_id>
		<wp:post_date><![CDATA[2011-10-07 21:58:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-08 04:58:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[memoryfinder-lookup]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://cczona.com/blog/99/</link>
		<pubDate>Wed, 12 Oct 2011 18:48:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=99</guid>
		<description></description>
		<content:encoded><![CDATA[I hope GitHub leaps on the opportunity to integrate this:

<blockquote>
<p>The <a href="http://code.google.com/p/bite-project/">Browser Integrated Testing Environment, or BITE</a>, is an open source Chrome Extension which aims to fix the manual web testing experience.&hellip;  When filing a bug, BITE automatically grabs screenshots, links, and problematic UI elements and attaches them to the bug.&hellip;</p>

<p>&hellip;[E]very action the tester takes on the page is recorded in JavaScript, and can be played back later.  This enables engineers to quickly determine if the steps of a bug repro in a specific environment, or whether a code change has resolved the issue.</p>

<p>Also included in BITE is a Record/Playback console to automate user actions in a manual test.</p>

<p><cite><a href="http://googletesting.blogspot.com/2011/10/take-bite-out-of-bugs-and-redundant.html">"Take a BITE out of Bugs and Redundant Labor" (Google Testing Blog)</a></cite></p>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>99</wp:post_id>
		<wp:post_date><![CDATA[2011-10-12 11:48:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-12 18:48:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[99]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Act of design</title>
		<link>http://cczona.com/blog/act-of-design/</link>
		<pubDate>Sat, 15 Oct 2011 01:59:11 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=103</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
&quot;The act of writing a unit test is more an act of design than of verification.&quot;
<cite><a href="http://www.amazon.com/Software-Development-Principles-Patterns-Practices/dp/0135974445/">"Agile Software Development, Principles, Patterns, and Practices"</a> by Robert C. Martin</cite>
</blockquote>

Writing test-first forces me to design in discrete units that are separately testable.  That sounds small, but in truth it's a momentous change.  It requires not only starting with a vision for a coherent application; but also envisioning each piece and how they will interact with each other.  It takes more time upfront, and can be mentally taxing.  But the end product is something that can be evolved, fixed, optimized, and documented fearlessly.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>103</wp:post_id>
		<wp:post_date><![CDATA[2011-10-14 18:59:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-15 01:59:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[act-of-design]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[103]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>p %w[terse brief concise]</title>
		<link>http://cczona.com/blog/p-wterse-brief-concise/</link>
		<pubDate>Thu, 20 Oct 2011 06:07:58 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[<p><code>irb&gt; puts object.inspect</code><em>, farewell.</em></p>
<p><em>Hello, </em><code>irb&gt; $ p object</code></p>

Particularly handy when grabbing stuff to edit from the irb history.  No more moving past <code>inspect</code> just to change what's being inspected.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date><![CDATA[2011-10-19 23:07:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-20 06:07:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[p-wterse-brief-concise]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby 1.9.1 bugginess</title>
		<link>http://cczona.com/blog/ruby-1-9-1-bugginess/</link>
		<pubDate>Thu, 20 Oct 2011 18:39:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[Working on a server which only has Ruby 1.9.1 installed is a constant challenge.  Hours wasted chasing "WTF?" bugs that turn out to be 1.9.1 itself misbehaving.  Because they're triggered only under certain conditions, they're not widely known.

Upgrade to 1.9.2, where that's an option.  But sometimes it's what we're stuck with.  Or we're choosing to test against multiple version of Ruby to make sure it's backwards compatible.

So for the benefit of others using 1.9.1, here are some gotchas to be aware of:

<h2>gem_prelude</h2>

<h3>"Error loading gem paths on load path in gem_prelude</h3>

In 1.9.1 patchlevels 329 and (current HEAD) 431, <a href="http://redmine.ruby-lang.org/issues/2404">if the environment variable GEM_HOME is set</a>, to any value, Ruby always starts execution with:

<blockquote>
    Error loading gem paths on load path in gem_prelude
    can't modify frozen string
    <internal:gem_prelude>:69:in `force_encoding'
    <internal:gem_prelude>:69:in `set_home'
    <internal:gem_prelude>:38:in `dir'
    <internal:gem_prelude>:76:in `set_paths'
    <internal:gem_prelude>:47:in `path'
    <internal:gem_prelude>:286:in `push_all_highest_version_gems_on_load_path'
    <internal:gem_prelude>:355:in `<compiled>'
</blockquote>

RVM provides 1.9.1 patchlevel 378 and patchlevel 431.  RVM sets GEM_HOME.  The Ruby team patched 378, so it's not affected.  The Ruby team has not patched 431.

In theory, RVM can <a href="http://beginrescueend.com/rubies/installing/">compile</a> with the <a href="http://redmine.ruby-lang.org/attachments/702/patch">gem_prelude patch</a>.  It's failing for me: "missing header for unified diff at line 5 of patch".  But worth trying.

The gem_prelude bug also messes with the invaluable <a href="https://github.com/carlhuda/bundler/issues/442">Bundler</a> for gemset management.

<h2>Gem.loaded_specs</h2>

When attempting to require a gem that definitely exists and is definitely on Gem.path, in some versions of 1.9.1, the require returns false anyway.  If preceded by a gem statement ("gem 'somegemname'), both statements still return false.  Interestingly, sometimes the gem statement will fail and yet the require doesn't.

Even when the require correctly returns true, Gem.loaded_specs doesn't populate.

But try this: call Gem.loaded_specs first, then (if necessary) gem statement, then the require.  Voila, works!

These are just the most recent of my finds.

<h2>The big picture.

<p>Finding help for 1.9.1 bugs can be difficult.  It's considered so buggy that most, <a href="http://rubyonrails.org/download">including the Rails team</a> and man gem developers, have chosen to ignore and not support it.  Which means that experience with its many bugs, and few fixes, is minimal even among those who are game to assist.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date><![CDATA[2011-10-20 18:39:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-20 18:39:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ruby-1-9-1-bugginess]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Testing for exceptions with MiniTest</title>
		<link>http://cczona.com/blog/asserting-exceptions-with-minitest/</link>
		<pubDate>Sun, 30 Oct 2011 06:47:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=113</guid>
		<description></description>
		<content:encoded><![CDATA[Much of Ruby 1.9.x's MiniTest library (the replacement and mimic for the former Unit/Test library) is pretty straightforward. Most commonly the pattern is:
<code>assert_something(expected, actual, optionalMessage)</code>

Sometimes you need to verify that specific conditions will cause the app to raise an exception as it should. This is where MiniTest's syntax diverges a bit from its usual routine. The critical part to make note is: <em>pass actual in a block</em>. The encapsulation allows MiniTest to capture, evaluate, and usefully report on the outcome; rather than summarily halt execution.
<h2>Assertion</h2>
<code><em><strong>assert_raises</strong>(<var>expectedException</var>) {<var>code block that will actually raise that exception</var>}</em>
assert_raises(<var>NoMethodError</var>) {<var>Integer.fizzbuzz</var>}
</code>
<h2>Expectation</h2>
<code><em>proc {<var>code block that will actually raise that exception</var>}.<strong>must_raise</strong>(<var>expectedException</var>)</em>
proc {Integer.fizzbuzz}.must_raise(NoMethodError)</code>

<h3>Head's up</h3>
Notice a more subtle variation? "must_raise" vs. "assert_raise<strong>s</strong>" &lt;&lt;-trailing "s"

Don't get tripped up.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>113</wp:post_id>
		<wp:post_date><![CDATA[2011-10-29 23:47:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-30 06:47:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[asserting-exceptions-with-minitest]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Testing for Ruby DATA object</title>
		<link>http://cczona.com/blog/testing-for-ruby-data-object/</link>
		<pubDate>Mon, 31 Oct 2011 04:22:36 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby's DATA object makes it possible to do neat little tricks like <a href="http://shifteleven.com/articles/2009/02/09/useless-ruby-tricks-data-and-__end__">storing templates and datafiles within the script that uses it</a>.

<code>
#!/usr/bin/env ruby
DATA.class # File
DATA.read # 'now we have a DATA object'
...
__END__
now we have a DATA object
</code>

But accessing it from external files, including test suites, is a pain.  Only the original file can see the DATA object. Ruby raises a NameError exception, complaining that the 'DATA' constant is undefined.

Working around this can be easy when you keep in mind that DATA is just another I/O object.  So you can, for instance, create a substitute File object.  And, like any other File object, if you're going to read it repeatedly <a href="http://stackoverflow.com/questions/1333720/ruby-scope-of-data-after-end">you need to reset the pointer for each read</a>.

<code>
if Module.const_defined?(:DATA)
  SOURCE=DATA
  POSITION=SOURCE.pos
else
  SOURCE=File.new(__FILE__)
  POSITION=File.read(SOURCE).match(/^__END__.*$/).offset(0)[1]+1
end

def data
  SOURCE.pos=POSITION
  SOURCE.read
end
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date><![CDATA[2011-10-30 21:22:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-31 04:22:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[testing-for-ruby-data-object]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Another good night at Women Who Code. Nice to see that in only two months, attendance has already grown...</title>
		<link>http://cczona.com/blog/another-good-night-at-women-who-code-nice-to-see-that-in-only-two-months-attendance-has-already-grown/</link>
		<pubDate>Mon, 07 Nov 2011 10:58:45 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=730</guid>
		<description></description>
		<content:encoded><![CDATA[Another good night at Women Who Code. Nice to see that in only two months, attendance has already grown big enough to have filled the oversized lobby at PariSoMa.<br /><br />Had a bunch of good chats, suggested a new WWC intermediate-level series (as complement to the novices series) on GitHubbing and open source hacking generally, and got wowed by a demo of using Kinect to remotely send selectable keystrokes and mouse events via body positions.( <span class="proflinkWrapper"><span class="proflinkPrefix">+</span><a href="https://plus.google.com/101944595225299875878" class="proflink">Judy Tuan</a></span> would be able to explain that one better. It&#039;s clearly got a lot of potential uses beyond gaming, which is the prospect I find most interesting.)<br /><br />Another woman gave an (impromptu) lightening talk about her nonprofit intro-to-programming project in Hunters Point, for young black girls. Some are as young as six, wow. The girls are learning some Python, KidsRuby, Scratch, and (possibly) Alice. The project needs more female coders, of any experience level, to contribute as little as one (Satur?)day to show girls that Women Programmers Really Do Exist and Are Cool, and help coach the students through the process of reasoning out solutions when they get stuck.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>730</wp:post_id>
		<wp:post_date><![CDATA[2011-11-07 10:58:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-07 10:58:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[another-good-night-at-women-who-code-nice-to-see-that-in-only-two-months-attendance-has-already-grown]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[google_plus_activity_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[z13putv50mfkzvp1g234i3fogkmne1adz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gender Policing the Restroom</title>
		<link>http://cczona.com/blog/gender-policing-the-restroom/</link>
		<pubDate>Thu, 29 Sep 2011 05:23:05 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=823</guid>
		<description></description>
		<content:encoded><![CDATA[A really good first-person POV on everyday harms inflicted by gender policing.

<a href="http://dailyxtra.com/vancouver/ideas/dear-lady-in-the-womens-washroom">"Dear Lady in the Women's Washroom"</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>823</wp:post_id>
		<wp:post_date><![CDATA[2011-09-29 05:23:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-09-29 05:23:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gender-policing-the-restroom]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rockstar</title>
		<link>http://cczona.com/blog/rockstar/</link>
		<pubDate>Mon, 31 Oct 2011 05:30:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=825</guid>
		<description></description>
		<content:encoded><![CDATA[Software engineering job listing; the usual: blah blah blah "Rockstar" blah blah "Super" blah blah "Awesome" blah blah etc.

<a href="http://www.meetup.com/EBRuby/messages/25321112/">Best reply of the day</a>:
<b><blockquote>"I'm not a rockstar, but rather a superhero, and prefer to enter via the third floor window. Am I eligible?"</blockquote></b>

Heh.

(For a detailed critique of the meme, read <a href="http://mettadore.com/2010/07/28/so-you-want-to-hire-a-ninja-do-you/">"So You Want To Hire a Ninja, Do You?"</a>, pointed out by another person on that thread.)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>825</wp:post_id>
		<wp:post_date><![CDATA[2011-10-31 05:30:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-31 05:30:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rockstar]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Go Gentle Into That Goodnight, Flash.</title>
		<link>http://cczona.com/blog/go-gentle-into-that-goodnight-flash/</link>
		<pubDate>Wed, 09 Nov 2011 05:46:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=831</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.electronista.com/articles/11/11/09/adobe.to.stop.mobile.flash.past.111/﻿">Flash, for mobile browsing (only, alas) is dead.</a> Here to this accelerating adoption of more accessible, more secure, less-memory sucking options.

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>831</wp:post_id>
		<wp:post_date><![CDATA[2011-11-09 05:46:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-09 05:46:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[go-gentle-into-that-goodnight-flash]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Napkin</title>
		<link>http://cczona.com/blog/napkin/</link>
		<pubDate>Wed, 23 Nov 2011 05:50:14 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=833</guid>
		<description></description>
		<content:encoded><![CDATA[On a search for something else, I stumbled across this oldie: <em><a href="http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html">A Brief, Incomplete, and Mostly Wrong History of Programming Languages</a></em>.


<blockquote>"1995 - At a neighborhood Italian restaurant, Rasmus Lerdorf realizes that his plate of spaghetti is an excellent model for understanding the World Wide Web and that web applications should mimic their medium. On the back of his napkin he designs Programmable Hyperlinked Pasta (PHP). PHP documentation remains on that napkin to this day."</blockquote>

Now I'm having flashbacks to old Drupal internals.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>833</wp:post_id>
		<wp:post_date><![CDATA[2011-11-23 05:50:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-23 05:50:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[napkin]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Madison Avenue</title>
		<link>http://cczona.com/blog/madison-avenue/</link>
		<pubDate>Mon, 28 Nov 2011 05:53:20 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=835</guid>
		<description></description>
		<content:encoded><![CDATA[
<blockquote>"Similac is the only formula with a special brain and eye blend."</blockquote>


I really don't think they read that ad's script aloud before approving it.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>835</wp:post_id>
		<wp:post_date><![CDATA[2011-11-28 05:53:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-28 05:53:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[madison-avenue]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CodeRetreat</title>
		<link>http://cczona.com/blog/coderetreat/</link>
		<pubDate>Sun, 04 Dec 2011 05:56:04 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=837</guid>
		<description></description>
		<content:encoded><![CDATA[Went to CodeRetreat to be challenged by newness. That it did. Attempting to define a workable solution, and implement it, in very limited time and with a stranger as pair partner. Twice had pairings in which we shared no common programming language. Everyone has distinctly different styles of communicating, and of course has their own favorite IDE.

A swift dive into multiple levels of unfamiliarity. Challenge, ahoy.

Learned a lot, especially from the partner discussions and group debriefings. Not just about coding, but also a valued exploration of what it takes to succeed at this kind of collaboration. Mulling over.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>837</wp:post_id>
		<wp:post_date><![CDATA[2011-12-04 05:56:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-04 05:56:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[coderetreat]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Logic</title>
		<link>http://cczona.com/blog/logic/</link>
		<pubDate>Tue, 22 Nov 2011 09:13:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=858</guid>
		<description></description>
		<content:encoded><![CDATA[Acquaintance:
<blockquote>"Yeah, I took Android programming last time, and am learning Java this semester."</blockquote>

Me: 
<blockquote>"Wait, huh, isn't that backwards?" </blockquote>

Him:
<blockquote>"Yep. Like learning Rails before Ruby."</blockquote>

Hah. Can't argue with that logic.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>858</wp:post_id>
		<wp:post_date><![CDATA[2011-11-22 09:13:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-11-22 09:13:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[logic]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>American Experience: The Donner Party</title>
		<link>http://cczona.com/blog/american-experience-the-donner-party/</link>
		<pubDate>Sun, 23 Oct 2011 09:16:15 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=861</guid>
		<description></description>
		<content:encoded><![CDATA[I've taken to playing episodes from the archives of American Experience while working out. Today's was <a href="http://video.pbs.org/video/1401950336">"The Donner Party"</a>. A story far more complex and sad than legend suggests.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>861</wp:post_id>
		<wp:post_date><![CDATA[2011-10-23 09:16:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-10-23 09:16:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[american-experience-the-donner-party]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fixing the &quot;you have to install development tools first&quot; error when installing certain Rubygems under Lion</title>
		<link>http://cczona.com/blog/fixing-the-you-have-to-install-development-tools-first-error-when-installing-certain-rubygems-under-lion/</link>
		<pubDate>Wed, 21 Dec 2011 05:16:34 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[Ah, Lion, you stealthy beast.  At first you pretended to be fine with RVM, but it was a mis-lead.  I reinstalled Homebrew and RVM, and you did seem content.  Rubies waiting where they should be, even with their gemsets attached.  But then I tried to use sqlite, and you just growled errors at me.  Even after upgrading XCode, you still insist that I "have to install development tools first."

For the record, when upgrading to Lion:

<ol>
<li>Finish with the Lion upgrade.
<li>Go to the App Store and download XCode 4.  It's free.
<li>After XCode 4 finishes downloading (over an hour in my case, but your mileage may vary), open "/Applications/Install XCode".  Let it too do its stuff.
<li><code>$ brew update</code>
<li><code>$ brew install --force sqlite</code>
<li><code>$ rvm gem head</code>
<li><code>$ rvm --force install 1.9.3</code> # whatever Ruby version you use; lather, rinse, repeat
<li><code>$ gem install sqlite3</code> # or bundle install sqlite3, if using Bundler
</ol>

Forcing RVM to reinstall its Rub(y|ies) is probably necessary if you have any gem that relies on C headers.

Homebrew is merely optional.  But sqlite relies on the library it installs, and I try to not carry forward messiness that's bound to bite me on the ass later.

Shout outs to <a href="http://www.fakingfantastic.com/2010/11/26/fixing-the-you-have-to-install-development-tools-first-error-with-nokogiri/">Frank Lakatos of Faking Fantastic</a> for the RVM fix, and to <a href="http://stackoverflow.com/a/421341/893498">Jörg W Mittag's explanation on Stackoverflow about CGems</a>.

<p class="alert">UPDATE: Apple has release a UNIX tools package for Lion which contains the necessary headers.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date><![CDATA[2011-12-20 21:16:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-21 05:16:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fixing-the-you-have-to-install-development-tools-first-error-when-installing-certain-rubygems-under-lion]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rewriting history</title>
		<link>http://cczona.com/blog/rewriting-history/</link>
		<pubDate>Sun, 08 Jan 2012 05:48:02 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[Ever commit to repo and then belatedly realize that the authorship metadata isn't what it should be?  Easy to do when pair programming.

<a href="http://help.github.com/change-author-info/">Here's a nifty little script for fixing authorship of commits within a Git repository.</a>  It uses a Git plumbing command called <var>filter-branch</var>.

Consider the GitHub-provided script a starting point for your own, rather than a copy/paste solution.  <A href="http://linux.die.net/man/1/git-filter-branch">Read filter-branch's documentation</a> carefully before using.  <var>filter-branch</var> changes the SHA-1 value of any commits affected, which means that every descendant commit's SHA-1 will also be re-written.  Of course, there are also the usual caveats about the pitfalls of changing history on a shared repo.

More info: <a href="http://progit.org/book/ch6-4.html">rewriting history from Scott Chacon, in Pro Git</a>.



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date><![CDATA[2012-01-07 21:48:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-08 05:48:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rewriting-history]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Kinect hacking in San Francisco</title>
		<link>http://cczona.com/blog/kinect-hacking-in-san-francisco/</link>
		<pubDate>Mon, 09 Jan 2012 20:37:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[There's a lot of excitement currently about hacking Kinect for artistic/creative purposes.  Gray Area Foundation for the Arts (GAFFTA) has an intro workshop weekend coming up on March 3rd/4th.  Check it out, if you're curious:  <a href="http://www.gaffta.org/2011/12/19/kinect-for-unity/">Kinect for Unity 3D</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date><![CDATA[2012-01-09 12:37:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-09 20:37:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[kinect-hacking-in-san-francisco]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rspec in a nutshell: dis and mock</title>
		<link>http://cczona.com/blog/rspec-in-a-nutshell-dis-and-mock/</link>
		<pubDate>Wed, 18 Jan 2012 01:01:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[Writing tests with Rspec is all about disssing your code and mockery. Feel free to point and laugh at it, too.

Kidding. But it does give us a handy-dandy mnemonic for <a href="https://www.relishapp.com/rspec/rspec-core/docs/example-groups/basic-structure-describe-it">basic Rspec syntax</a>
<pre>describe Project do
  it "should be able to abbreviate its name" do
    mock_project = mock_model(Project, :name =&gt; "My Big Project")
    mock_project.abbr.should == "MyBP"
  end
end</pre>
<ol>
	<li><strong>D</strong>escribe</li>
	<li><strong>I</strong>t</li>
	<li><strong>S</strong>pec</li>
	<li><a href="https://www.relishapp.com/rspec/rspec-mocks"><strong>Mock</strong></a></li>
</ol>
Hmm. An optional Context throws this off a bit.  Well, you'll just have to memorize "d(c)is" on your own.

<cite>(Example courtesy of "Rails Test Prescriptions")</cite>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date><![CDATA[2012-01-17 17:01:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-18 01:01:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rspec-in-a-nutshell-dis-and-mock]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Diffing for commits</title>
		<link>http://cczona.com/blog/diffing-for-commits/</link>
		<pubDate>Fri, 20 Jan 2012 23:55:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[<dl>
<dt><code>git diff</code></dt>
<dd>Differences between <em>uncommitted</em> changes vs <em>staged</em> changes.</dd>

<dt><code>git diff --cached</code> or <code>git diff --staged</code></dt>
<dd>Differences between <em>staged</em> changes vs the <em>latest commit</em>.</dd>

<dt><code>git difftool</code></dt>
<dd>Use an <em>external application</em> to visualize <code>git diff</code>.</dd>

<dt><code>git difftool --tool [name]</code> or <code>git difftool -t [name]</code></dt>
<dd>Use a <em>specified</em> external application to visualize <code>git diff</code>.</dd>
  
  </dl>

<p>On OSX, XCode installs one such visual tool, <a href="http://sakr.me/146">FileMerge</a>, into /Developer/Applications/Utilities/FileMerge.app. You can invoke FileMerge by its commandline name, opendiff. i.e. <code>git difftool -t opendiff</code>. FileMerge/opendiff does a nice job of reporting each change when diffing plain text files, such as uncompiled code.</p>

<p><code>git help difftool</code> lists other tools it know how to use, such as araxis, bc3, diffuse, emerge, ecmerge, gvimdiff, kdiff3, kompare, meld, opendiff, p4merge, tkdiff, vimdiff and xxdiff. (Not all of these are installed by default. <A href="http://www.araxis.com/merge/">Araxis Merge</a>, for instance, is a commercial product capable of visualizing diffs for Word, Excel, OpenDocument, PDF, RTF, images, and binary files.  It's also expensive as heck.)</p>
<p>
If your preferred diff tool is not on this list, <code>git config</code> can be used to add custom support for it. <code>git help difftool</code> has details.</p>

<p>For PDFs, I like diffpdf.  It's free, open source, and one of the few diff tools that picks up on both visual and textual changes. I own a bunch of beta books, each of which get regular content updates by their authors.  It's handy to be able to see exactly what's changing across time in those PDFs, whether it be  diagram refinements, clarifying an example, subtle typo fixes, or whole new passages.</p>

<h3>How to use git difftool -t diffpdf on OSX</h3>
<ol>
<li>Install <a href="http://mxcl.github.com/homebrew/">homebrew</a></li>
<li>Install <a href="http://www.qtrac.eu/diffpdf.html">diffpdf</a>
  </li>
<li><a href="http://stackoverflow.com/questions/6412516/configuring-diff-tool-with-gitconfig">Configure git</a>
  </li></ol>

<p>By the way, these tools don't necessarily have to be used via git.  Generally they allow you to compare any arbitrary two (sometimes even three) files.  Note that tools vary as to what, and how, they report changes.  diff, for instance, punts on binaries:</p>

<blockquote>
  <pre>$ diff foo.txt bar.txt
1,1
< Hello world
---
> My little pony

$ diff A.jpg B jpg
Binary files A.jpg and B.jpg differ</pre></blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date><![CDATA[2012-01-20 15:55:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-20 23:55:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diffing-for-commits]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>On executing your startup idea</title>
		<link>http://cczona.com/blog/on-executing-your-startup-idea/</link>
		<pubDate>Sun, 22 Jan 2012 05:44:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>

<p>"Talk about your idea. Many entrepreneurs I meet are worried others will steal their idea if they tell too many people. In reality, most people are way too busy with their own job or idea to bother stealing yours. Plus, ideas aren't worth much (unless it's super easy to implement, in which case you should stop talking and just do it). Execution is what distinguishes winners from losers.</p>

<p>Talking about your idea will give you valuable feedback that can help you improve your execution. Talking about stuff you're passionate about will help you attract people who can help you with your idea or introduce you to others who can help."</p>


<cite>Annie Chang, lolapps founder, answers <a href="http://www.huffingtonpost.com/angie-chang/interview-with-lolapps-co_b_1015019.html">"What's the most important piece of advice you give entrepreneurs?"</a></cite>
</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date><![CDATA[2012-01-21 21:44:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-22 05:44:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[on-executing-your-startup-idea]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fun with Ruby multiple-assignment heredocs</title>
		<link>http://cczona.com/blog/fun-with-ruby-multiple-assignment-heredocs/</link>
		<pubDate>Tue, 31 Jan 2012 20:29:22 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=181</guid>
		<description></description>
		<content:encoded><![CDATA[<code>puts (foo = &lt;&lt;FIRST),(bar = &lt;&lt;SECOND),(baz = &lt;&lt;THIRD)
a
FIRST
b
SECOND
c
THIRD</code>
<pre>a
b
c</pre>
<code>puts baz, foo, bar</code>
<pre>c
a
b</pre>

A nice option when you've got a series of strings that need escapes.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date><![CDATA[2012-01-31 12:29:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-31 20:29:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fun-with-ruby-multiple-assignment-heredocs]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Diaspora Bug Mash Mondays</title>
		<link>http://cczona.com/blog/diaspora-bug-mash-mondays/</link>
		<pubDate>Tue, 31 Jan 2012 23:03:43 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[ 
  <p><a href="https://joindiaspora.com/">Diaspora*</a>; is a Ruby on Rails-based distributed social networking open source project. New to open source coding? Welcome to <a href="http://devblog.joindiaspora.com/2012/01/30/introducing-bug-mash-monday/">Diaspora* Bug Mash Mondays</a>:</p>

  <blockquote><p>"We've sorted through our GitHub issues to find bugs that can be readily fixed and committed by beginners&hellip;</p>

  <p>Every Monday, 5 bugs with descriptions and links will be posted on the devblog, inviting anyone out in the community to jump in and do their part. At the end of each week, we'll publicly recognize those community members that jumped in on the blog itself, and if your fixes pass testing, we'll accept it into our mainline branch.</p>

  <p>Bug Mashing is a great way to welcome in new blood to the community."</p>

  <cite>Sean Tilley, <a href="http://devblog.joindiaspora.com/2">Diaspora* Core Team</a></cite> </blockquote>

  <p><a href="http://devblog.joindiaspora.com/2012/01/30/introducing-bug-mash-monday/">Read more, and check out this week's Bug Mash issues.</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date><![CDATA[2012-01-31 15:03:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-01-31 23:03:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[diaspora-bug-mash-mondays]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[189]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Easy inspection of a RubyGems library</title>
		<link>http://cczona.com/blog/easy-inspection-of-a-rubygems-librar/</link>
		<pubDate>Fri, 17 Feb 2012 20:42:44 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Handy trick, courtesy of Aaron Blohowiak on ruby-6:

<code>$ gem install open_gem
$ gem open [gem_name]</code>

The entire gem's codebase is opened into your favorite editor, as defined by the shell variable EDITOR.

<code>$ echo EDITOR
vi
$ $EDITOR = emacs
$ echo EDITOR
emacs
</code>

<p>My own choice is actually <a href="http://macromates.com">TextMate</a> (mate).  But fewer people have that already on their system.</p>

By the way, if you're using the <a href="http://gembundler.com/">Bundler</a> gem, your working directory includes a Gemfile file or Gemfile is further up its path, and <code>bundle install</code> is current, then you can do this instead:

<code>$ bundle open [gem_name]
</code>

Somewhat less useful to me.  Sometimes I just want to poke around inside a lib.  It's not necessarily one in active use at that moment.  But choose whatever approach fits your workflow best.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date><![CDATA[2012-02-17 12:42:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-02-17 20:42:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[easy-inspection-of-a-rubygems-librar]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Word salad</title>
		<link>http://cczona.com/blog/word-salad/</link>
		<pubDate>Mon, 20 Feb 2012 07:05:33 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[Prepping a presentation. <a href="http://www.wordle.net/">Wordle</a> is so handy.

Ahem.  It is also distracting as hell.  Congratulations on the Grammys, Adele.

<a title="Wordle: Someone Like You" href="http://www.wordle.net/show/wrdl/4876242/Someone_Like_You"><img style="padding: 4px; border: 1px solid #ddd;" src="http://www.wordle.net/thumb/wrdl/4876242/Someone_Like_You" alt="Wordle: Someone Like You" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date><![CDATA[2012-02-19 23:05:33]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-02-20 07:05:33]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[word-salad]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Should I Send This Email?</title>
		<link>http://cczona.com/blog/should-i-send-this-email/</link>
		<pubDate>Thu, 23 Feb 2012 02:45:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.onlineitdegree.net/email-overload/"><img src="http://cczona.com/blog/wp-content/uploads/2012/02/email-overload1.gif" alt="" title="Email Overload: Should I Send This Email? (flowchart)" width="700" height="4146" class="aligncenter size-full wp-image-230" /></a>

<p>Fun with useful infographics!</p>

<p><small>Wait.  Company bans email =&gt; Company has 20% less email?  I think the lesson here is that email volume cannot fall off without mass 3rd-party cooperation.  And <del>not feeding trolls</del> <ins>cutting off the air to spammers</ins>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date><![CDATA[2012-02-22 18:45:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-02-23 02:45:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[should-i-send-this-email]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Apple, Ruby, RVM, and Homebrew: a slick combination, now improved.</title>
		<link>http://cczona.com/blog/apple-ruby-rvm-and-homebrew-a-slick-combination-now-improved/</link>
		<pubDate>Thu, 23 Feb 2012 18:54:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Two welcome announcements this week:

<ul>
  <li><a href="http://kennethreitz.com/xcode-gcc-and-homebrew.html">Apple has just released the XCode UNIX tools, including GCC, as a
standalone 171MB package for Lion users.</a>  Crucially, it includes the C headers not previously available with Kenneth Reitz's workaround.  Which should solve <a href="2011/12/fixing-the-you-have-to-install-development-tools-first-error-when-installing-certain-rubygems-under-lion/">some problems Homebrew had been having.</a>

  <li><a href="http://www.ruby-forum.com/topic/3664060">As of Ruby 1.9.3-p125, MRI now has LLVM/Clang compilation support</a>
</ul>

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date><![CDATA[2012-02-23 10:54:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-02-23 18:54:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[apple-ruby-rvm-and-homebrew-a-slick-combination-now-improved]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Appreciations du jour</title>
		<link>http://cczona.com/blog/appreciations-du-jour/</link>
		<pubDate>Fri, 30 Mar 2012 02:23:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=251</guid>
		<description></description>
		<content:encoded><![CDATA[Sometimes when life starts to feel vexing, I do some appreciation journaling.  It's amazing how easily my outlook can be transformed by the simple practice of asking what one thing I appreciate of that day.  No matter how crudtastic the events, or how surly I'm feeling about them, there's always something.  Usually, the one cascades into many.

<em>&hellip;grateful to have such-and-such person who let me rant about crudtastic X*Y and nodded in all the right places&hellip;grateful that it was a sunny warm day when I stepped outside this morning...grateful that someone invented crepes, or sushi, or omigod Trader Joe's Lemon Curd&hellip;grateful to see it turns out there were multiple things today that I can be ever so grateful for&hellip;</em>

Heck, those are just samples.  Lately I could write far better lists any time of day.  Lucky lady; make way.

Grateful to have learned to be more comfortable accepting others' appreciations, and with sharing openly what I appreciate of them as friend, colleague, client, mentor, student, or educator.

Glad to have taken the plunge of moving to San Francisco.  Relieved that it has so thoroughly proved to be the right decision.

Affirmed by finally getting to be among a swirl of peers, including discoveries of what wealth of opportunities arise along with them: collaborations, competitions, lively conversations, tipping each other off to new stuff, the back-and-forth about how to solve problems, etc.  Heck, even pillow talk is better; yay for geek-to-geek snuggling.

Appreciative that others have been consciously making space for women &mdash; and for other mariginalized groups &mdash; to engage in our professions and lead them forward.  Inspired to take part, contribute, support, exhort, high-five, keep the momentum growing.  <a href="http://workshops.railsbridge.org/">Railsbridge</a>, <a href="http://womenwhocode.com/">Women Who Code</a>, <a href="http://www.blackgirlscode.com/">Black Girls Code</a>, DevChix, CodeChix...  God how I'm loving doing the volunteering.  Busy busy.

Stoked about getting to poke around inside the startups and major movers that sponsor events for us.  Not to mentioning hearing from the engineers who work from them, and seeing announcements that these companies are hiring like crazy.

Energized by what others are doing.

Fascinated by the tools and techniques they keep introducing.  (Ahem.  Feel free to raise the floodgates some.  The onslaught of new-new-new-always-one-more-changeroo is how I hit Professional Overwhelm in the first place.)

Gratified by having met bigger challenges and having made bolder choices.

Joyful every time I enter my lovely new home! (Which counts as a professional gratitude, since that also is where office resides.)

Exhilarated to be bringing my disparate geekitude circles into professional cahoots.

Serene for having taken the time to re-discover what gets me out of bed in the morning.  In the fast-moving current of tech life, holding still for a while is a blissful action.

There's a lot more I could say.  But bringing it to the higher-level abstractions has covered a fair amount of that territory.

Today I am also thankful that it did not rain.  It counts, totally.

P.S.  Belated addition!  Grateful for having the most excellent neighbors.  Just the kind you'd want.  Not work related, you say?  Pshaw.  If any less awesome, I would be Internet Worker Without Internet Access.  Fi-fi-fo-fum.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>251</wp:post_id>
		<wp:post_date><![CDATA[2012-03-29 19:23:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-03-30 02:23:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[appreciations-du-jour]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Textmate errors using rspec.tmbundle &amp; RVM</title>
		<link>http://cczona.com/blog/rspec-tmbundle-with-textmate-rvm/</link>
		<pubDate>Sat, 31 Mar 2012 20:26:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=268</guid>
		<description></description>
		<content:encoded><![CDATA[Out of the box, rspec.tmbundle doesn't always interact smoothly with TextMate and RVM. Here's how to fix a few errors TextMate may generate:

<code>/Users/your-username/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require': no such file to load -- spec/autorun (LoadError) from /Users/your-username/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1/rubygems/custom_require.rb:36:in `require' from /Users/your-username/Library/Application Support/TextMate/Bundles/rspec.tmbundle/Support/lib/rspec/mate.rb:43:in `rescue in ' from /Users/your-username/Library/Application Support/TextMate/Bundles/rspec.tmbundle/Support/lib/rspec/mate.rb:40:in `' from :29:in `require' from :29:in `require' from /tmp/textmate-command-12490.rb:2:in `'</code>
<h2>rspec.tmbundle</h2>
TextMate's rspec bundle is looking for a <a href="https://github.com/rspec/rspec-tmbundle"><var>rspec-tm</var> file</a> in the project root directory, specifying which version of Rspec to be using. <code>--rspec-version 2.9.0</code>, for instance.
<h2>RVM</h2>
RVM needs <a href="https://rvm.beginrescueend.com/integration/textmate/"><code>rvm-auto-ruby</code>, a project <var>.rvmrc</var>, or a wrapper</a>. Set the .rvmrc to something like <code>rvm use 1.9.3@this-projects-gemset</code>, for instance. (MiniTest is fine with me just using rvm-auto-ruby, while Rspec is also needing the .rvmrc for some reason. So if you're still getting errors, try combining solutions.)

rspec.tmbundle may also need you to set RUBYOPT to "rubygems".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>268</wp:post_id>
		<wp:post_date><![CDATA[2012-03-31 13:26:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-03-31 20:26:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rspec-tmbundle-with-textmate-rvm]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>American Experience: Civilian Conservation Corps</title>
		<link>http://cczona.com/blog/american-experience-civilian-conservation-corps/</link>
		<pubDate>Mon, 05 Dec 2011 08:18:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=839</guid>
		<description></description>
		<content:encoded><![CDATA[ 
American Experience continues to fascinate. In the <a href="http://video.pbs.org/video/1309577149">episode on FDR's Civilian Conservation Corps</a>, interviewees attempt to put CCC into historical context:

<ul>
	<li>Created 3 million well-paid jobs during the Great Depression's record unemployment.</li>
 
	<li>Educated 3 million men in everything from trades to basic literacy.</li>
 
	<li>Created, or made radically more accessible, many state and federal parks.</li>

	<li>Revived fallow farmlands, or turned them to pasture. Injected money into the economies of towns all over the country.</li>

	<li>Moved families off soup lines by requiring that $25 of workers' $30 monthly salary automatically be sent home to the families.</li>
</ul>


The most intriguing suggestion was that CCC's existence facilitated U.S. rapid mobilization for WWII because that was such a substantial pool of trained, disciplined young men to draw upon.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>839</wp:post_id>
		<wp:post_date><![CDATA[2011-12-05 08:18:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-05 08:18:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[american-experience-civilian-conservation-corps]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Microclimatology</title>
		<link>http://cczona.com/blog/microclimatology/</link>
		<pubDate>Thu, 29 Mar 2012 08:41:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=841</guid>
		<description></description>
		<content:encoded><![CDATA[Gmail has an optional template with dynamic background image to reflect current weather conditions wherever I am.

It's really confused by San Francisco.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>841</wp:post_id>
		<wp:post_date><![CDATA[2012-03-29 08:41:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-03-29 08:41:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[microclimatology]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Happy Centennial, Girl Scouts. You rock.</title>
		<link>http://cczona.com/blog/happy-centennial-girl-scouts-you-rock/</link>
		<pubDate>Sun, 18 Mar 2012 08:44:12 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=843</guid>
		<description></description>
		<content:encoded><![CDATA[<cite>"<a href="http://jezebel.com/5892572/10-badass-moments-in-girl-scout-history">Ten Badass Moments in Girl Scout History</a>"</cite>

<blockquote>"In response to a pending resolution that would have honored the 100th anniversary in the state of Indiana, Rep. Bob Morris informed his colleagues via hilarious letter that, based on some "internet research," he'd concluded that those Girl Scouts were up to no good. But thankfully, anti GSA bullshittery lends itself well to rebuttal. In response to Marshall's letter, Republican Speaker of the Indiana House Brian Bosma bought 278 boxes of Thin Mints and spent the next day eating them while presiding over the legislature, occasionally offering cookies to his colleagues."</blockquote>


I wouldn't have shared the cookies. Transphobia == no DoSiDos for you. But Brian Bosma has a better scheme, clearly.

P.S. Thank you for 100 years of leadership, Girl Guides^H^H^H^H^H Scouts!﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>843</wp:post_id>
		<wp:post_date><![CDATA[2012-03-18 08:44:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-03-18 08:44:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[happy-centennial-girl-scouts-you-rock]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ladies Who Lunch</title>
		<link>http://cczona.com/blog/ladies-who-lunch/</link>
		<pubDate>Thu, 08 Mar 2012 08:57:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=850</guid>
		<description></description>
		<content:encoded><![CDATA[Linkedin group: "<em>Ladies Who Launch</em>". The reference is even better if you're a musical theater fan. 

Elaine Strich made it famous, but <a href="http://www.youtube.com/watch?v=TrftaZcxPYA">Patti LuPone's rendition</a> is the killer.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>850</wp:post_id>
		<wp:post_date><![CDATA[2012-03-08 08:57:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-03-08 08:57:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ladies-who-lunch]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate v2.anything, at last.</title>
		<link>http://cczona.com/blog/textmate-v2-anything-at-last/</link>
		<pubDate>Fri, 16 Dec 2011 09:10:10 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=854</guid>
		<description></description>
		<content:encoded><![CDATA[After years of being vaporware, TextMate 2.x is out. Well, in alpha. But it exists.

We'll see whether it's too late. SublimeText, among others, has been attracting a lot of notice lately for features that even TM 2.0 won't. Crucially, they also are farther ahead in offering Lion support.

But as a TextMate user, any new release is very good news.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>854</wp:post_id>
		<wp:post_date><![CDATA[2011-12-16 09:10:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-16 09:10:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[textmate-v2-anything-at-last]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mathy</title>
		<link>http://cczona.com/blog/mathy/</link>
		<pubDate>Fri, 09 Dec 2011 09:11:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=856</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>‎"Amount you owe: $88. Minimum due: $89."</blockquote>

High level math skills are not necessarily a requirement for doing software engineering. Though generally there's competitive advantage for programmers who can subtract correctly.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date><![CDATA[2011-12-09 09:11:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2011-12-09 09:11:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mathy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Git for engineers</title>
		<link>http://cczona.com/blog/git-for-engineers/</link>
		<pubDate>Sun, 01 Apr 2012 02:35:17 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[Well this is an interesting approach.  If you haven't related to previous tutorials about Git, maybe <a href="http://sitaramc.github.com/gcs/index.html">Git for Engineers</a> is what you've needed.

(On a tangentially-related note: <a href="http://www.cookingforengineers.com/">Cooking for Engineers</a>. At minimum, check out "Bacon, parts <a href="http://www.cookingforengineers.com/article/3/Bacon-Part-I">1</a> and <a href="http://www.cookingforengineers.com/article/110/Bacon-Part-II">2</a>").]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date><![CDATA[2012-03-31 19:35:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-01 02:35:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-for-engineers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Control-R to interactively search Bash history</title>
		<link>http://cczona.com/blog/control-r-to-interactively-search-bash-history/</link>
		<pubDate>Sun, 01 Apr 2012 20:10:06 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=278</guid>
		<description></description>
		<content:encoded><![CDATA[Someone casually mentioned that <kbd>Control-R</kbd> impresses a lot of people.  Hmm.  I do not know this one&hellip;.

Oh holy heck. <a href="http://www.thegeekstuff.com/2008/08/15-examples-to-master-linux-command-line-history"> <kbd>Control-R</kbd> is so bloody useful for searching Bash shell history.</a>  Look at all the keystrokes I've been wasting with <code>history | grep -i whatever</code>.  Not to mention then typing the selected line's number.

Who cares that it impresses.  Productivity!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date><![CDATA[2012-04-01 13:10:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-01 20:10:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[control-r-to-interactively-search-bash-history]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Specifying constraints will make your data happier, really</title>
		<link>http://cczona.com/blog/specifying-constraints-will-make-your-data-happier-really/</link>
		<pubDate>Sun, 06 May 2012 22:32:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=288</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In <a href="http://www.mikeperham.com/2012/05/05/five-common-rails-mistakes/">"Five Common Rails Mistakes"</a> Mike Perham reminds Rails developers to put data constraints (via migrations) into the database schema. Yes. For excellent detailed discussions of why, see:

<ul>
	<li><a href="http://stackoverflow.com/questions/464042/should-you-enforce-constraints-at-the-database-level-as-well-as-the-application">Should you enforce constraints at the database level as well as the application level?</a> at Stack Overflow</li>
	<li><a href="http://www.devarticles.com/c/a/Ruby-on-Rails/Handling-Advanced-Database-Features-with-Rails/">Handling Advanced Database Features with Rails</a> chapter from Advanced Rails</li>
</ul>

<p>Both are long, and well-worth taking the time to read thoroughly.

<p>A common counter-argument to these is duplication.  As the Advanced Rails excerpt notes, database logic and business logic are separate layers. Here are some gems to check out for DRYing up your models and schema:

<ul>
	<li><a href="https://www.ruby-toolbox.com/gems/schema_plus">schema_plus</a> <small>(<a href="http://www.slideshare.net/Michaomnicki/schema-plus">slides</a>)</small></li>
	<li><a href="https://www.ruby-toolbox.com/gems/schema_validations">schema_validations</a></li>
	<li><a href="https://www.ruby-toolbox.com/gems/schema_associations">schema_associations</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date><![CDATA[2012-05-06 15:32:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-06 22:32:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[specifying-constraints-will-make-your-data-happier-really]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[288]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Keeping it simple</title>
		<link>http://cczona.com/blog/keeping-it-simple/</link>
		<pubDate>Wed, 09 May 2012 04:26:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Applies to many things, in life as well as profession:</p>

<ol>
  <li>Untested code isn't done.</li>
  <li>Unreleased code isn't done.</li>
  <li>Undocumented code isn't done.</li>
  <li>Set many, small, specific goals.</li>
  <li>Simplicity gives you more options than complexity.</li>
  <li>Do something every day. Finish something every week.</li>
  <li>One feature finished is better than ten features planned.</li>
</ol>

<p><cite><small>I've kept this bit of wisdom for years.  Alas, without retaining source info.  My apologies to the author.  If it's yours, let me know so you can be properly cited.  Thank you!</small></cite></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date><![CDATA[2012-05-08 21:26:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-09 04:26:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[keeping-it-simple]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>GitX: a short history</title>
		<link>http://cczona.com/blog/gitx-a-short-history/</link>
		<pubDate>Wed, 16 May 2012 05:49:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=314</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>In the beginning there was GitX</h3>
I keep meeting developers who still use the old GitX developed by pieter, unaware there's anything newer.  Head's up: it hasn't had a new commit for 3 years.

<blockquote><em>"This fork is no longer active."</em> <cite><a href="https://github.com/pieter/gitx/wiki">(wiki)</a></cite></blockquote> 

<h3>And it begat children</h3>
Two forks arose in its place.  Both added substantial new feature sets, taking slightly different approaches. 

One of these, <a href="https://github.com/brotherbard/gitx/tree/9dd29f6048525481a761a80a60c2da6b60e8a734">brotherbard's GitX</a>, has since fallen by the wayside too; its last commit was a year and a half ago.

Whereas the other successor, <a href="http://gitx.laullon.com">German Laullon's GitX(L)</a> remains under very active development.  This quarter alone, there have been a couple dozen commits including accepting 10 pull requests from other developers.  The <a href="http://gitx.laullon.com/">GitX(L) homepage</a> currently lists 90 contributors including brotherbard himself.

This is what open source excels at.  Someone abandoned a project, and others rolled with it.  Consensus built up around one of the forks, and a community has sprung up to keep it thriving.

Upgrade to GitX(L), if you haven't already.  It's gotten some really nice enhancements along the way.

<h3>And one of those begat a child too</h3>

The story doesn't end with GitX(L) either.  It's been forked too, by a new project called <a href="https://github.com/rowanj/gitx">GitX(R)</a> which is focusing on

<blockquote>"&hellip;working with the latest tools for developing software for current Apple platforms. As such, it only supports 64-bit Intel macs, and currently deploying versions of OS X and Xcode&hellip; [W]e are prioritizing moving away from deprecated or unreliable technologies like a dependency on command-line git usage to drive GitX features; and staying up-to-date with Apple and third-party frameworks and libraries that are used."</blockquote>

In practice only Lion or higher is supported ("Snow Leopard may or may not work"), plus XCode 4.3 is strongly recommended.

Some of the folks I teach or collaborate with are Snow Leopard users.  So for the moment I'm sticking with GitX(L) for those brief times when we need to flip over to a GUI. But the ongoing story of GitX is good for everybody.

Pick your favorite poison.  If not one of the GitX forks, goodness knows there are <a href="http://stackoverflow.com/a/4692128/893498">plenty of other options</a>.

UPDATE: GitX(R) is now named GitX-dev]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date><![CDATA[2012-05-15 22:49:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-16 05:49:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[gitx-a-short-history]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seven Steps to Great Unit Test Names</title>
		<link>http://cczona.com/blog/seven-steps-to-great-unit-test-names/</link>
		<pubDate>Wed, 16 May 2012 18:25:13 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=328</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://agileinaflash.blogspot.com/2012/05/seven-steps-to-great-unit-test-names.html">http://agileinaflash.blogspot.com/2012/05/seven-steps-to-great-unit-test-names.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>328</wp:post_id>
		<wp:post_date><![CDATA[2012-05-16 11:25:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-16 18:25:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[seven-steps-to-great-unit-test-names]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>giant robots smashing into other giant robots</title>
		<link>http://cczona.com/blog/giant-robots-smashing-into-other-giant-robots/</link>
		<pubDate>Fri, 18 May 2012 17:27:11 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://robots.thoughtbot.com/post/23288959017/designing-for-touch">http://robots.thoughtbot.com/post/23288959017/designing-for-touch</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date><![CDATA[2012-05-18 10:27:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-18 17:27:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[giant-robots-smashing-into-other-giant-robots]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why do some open source projects do not accept pull requests, but emailing patch files only - Programmers</title>
		<link>http://cczona.com/blog/why-do-some-open-source-projects-do-not-accept-pull-requests-but-emailing-patch-files-only-programmers/</link>
		<pubDate>Fri, 18 May 2012 10:32:59 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=332</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://programmers.stackexchange.com/questions/149199/why-do-some-open-source-projects-do-not-accept-pull-requests-but-emailing-patch">http://programmers.stackexchange.com/questions/149199/why-do-some-open-source-projects-do-not-accept-pull-requests-but-emailing-patch</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>332</wp:post_id>
		<wp:post_date><![CDATA[2012-05-18 10:32:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-18 10:32:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[why-do-some-open-source-projects-do-not-accept-pull-requests-but-emailing-patch-files-only-programmers]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>It&#039;s official: Internet Explorer is finally, finally no longer the world&#039;s most-used browser</title>
		<link>http://cczona.com/blog/its-official-internet-explorer-is-finally-finally-no-longer-the-worlds-most-used-browser/</link>
		<pubDate>Tue, 22 May 2012 06:11:47 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=334</guid>
		<description></description>
		<content:encoded><![CDATA[This week <a href="http://www.csmonitor.com/Innovation/Horizons/2012/0521/Google-Chrome-edges-out-Internet-Explorer.-Will-the-lead-last">Internet Explorer finally succumbed to long-overdue realities</a>.

<a href="http://www.h-online.com/open/news/item/Chrome-passes-IE-in-browser-share-1580620.html"><img alt="Chrome market share overtakes IE, seemingly permanently, 2012-05-21" src="http://www.h-online.com/imgs/43/8/4/3/1/1/8/StatCounter-browser-ww-weekly-200827-201221.jpg-89e3671840650a1d.jpeg" title="Browser market share 2012-05-21" class="alignnone" width="854" height="500" /></a>


What pleases me most is the diversity of browsers in the modern ecosystem.  Salud to Chrome, Firefox, and Safari for driving forward web standards and innovation (yes, the two do go together).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>334</wp:post_id>
		<wp:post_date><![CDATA[2012-05-21 23:11:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-22 06:11:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[its-official-internet-explorer-is-finally-finally-no-longer-the-worlds-most-used-browser]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Prioritizing work, love, and day</title>
		<link>http://cczona.com/blog/prioritizing-work-love-and-day/</link>
		<pubDate>Wed, 23 May 2012 18:58:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=342</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>"Never allow someone to be your priority, while allowing yourself to be their option."</blockquote><cite><a href="https://twitter.com/ibmarcia/statuses/202096495787380736">Marcia Baczynski</a></cite>

<p>Although she's talking about romantic relationships, it's valuable advice for a contractor to heed too.</p>

<p><em>Note that "allow" is the operative word in that context.  For goodness sake, do make contractual agreements for granting special priority and for being compensated accordingly.  It's one of the crucial value-added services of what we do.</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>342</wp:post_id>
		<wp:post_date><![CDATA[2012-05-23 11:58:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-23 18:58:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[prioritizing-work-love-and-day]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A life of freelancing</title>
		<link>http://cczona.com/blog/a-life-of-freelancing/</link>
		<pubDate>Tue, 29 May 2012 21:11:02 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=349</guid>
		<description></description>
		<content:encoded><![CDATA[<aside><p>I've been a freelancer for more than a decade.  It's a pleasure to see those experiences, and acquired professional wisdom, reflected in the words of someone so extraordinarily accomplished as Neil Gaiman.  It's easy to believe these are challenges unique to you; until you eventually discover, with awe-struck relief, that we all identify with these.<p><aside>

<h3>Neil Gaiman, about a life of freelancing</h3>

<h4>On putting yourself out there</h4>
<blockquote><p>"A freelance life, a life in the arts, is sometimes like putting messages in bottles, on a desert island, and hoping that someone will find one of your bottles and open it and read it, and put something in a bottle that will wash its way back to you: appreciation, or a commission, or money, or love. And you have to accept that you may put out a hundred things for every bottle that winds up coming back…."</p></blockquote>

<h4>On self-doubt, boundaries, and burnout</h4>
<blockquote>
<p>"The problems of success can be harder, because nobody warns you about them.</p>

<p>The first problem of any kind of even limited success is the unshakable conviction that you are getting away with something, and that any moment now they will discover you. It's Imposter Syndrome...</p>

<p>The problems of success. They're real, and with luck you'll experience them. The point where you stop saying yes to everything, because now the bottles you threw in the ocean are all coming back, and have to learn to say no….</p>

<p>And after that, the biggest problem of success is that the world conspires to stop you doing the thing that you do, because you are successful. There was a day when I looked up and realised that I had become someone who professionally replied to email, and who wrote as a hobby…."</p>
</blockquote>


<h4>On building a satisfying business</h4>
<blockquote>
<p>"…[W]hatever you do you have one thing that's unique….</p>

<p>Do the stuff that only you can do…."</p>
</blockquote>

<h4>On letting go of perfectionist aspirations</h4>
<blockquote>
<p>"The things I've done that worked the best were the things I was the least certain about...</p>

<p>People keep working in a freelance world...because their work is good, and because they are easy to get along with, and because they deliver the work on time. And you don't even need all three. Two out of three is fine. People will tolerate how unpleasant you are if your work is good and you deliver it on time. They'll forgive the lateness of the work if it's good, and if they like you. And you don't have to be as good as the others if you're on time and it's always a pleasure to hear from you…."</p>

<p>"&hellip;[P]retend to be someone who is wise, and then just behave like they would.</p>

<p>...Make interesting mistakes, make amazing mistakes, make glorious and fantastic mistakes."</p>
</blockquote>

<cite>Excerpted from <a href="http://www.uarts.edu/neil-gaiman-keynote-address">Neil Gaiman, Commencement Keynote Address, University of the Arts, May 17, 2012</a>
</cite>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>349</wp:post_id>
		<wp:post_date><![CDATA[2012-05-29 14:11:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-29 21:11:02]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[a-life-of-freelancing]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why your healthcare provider&#039;s website isn&#039;t as great as you&#039;d expect it to be</title>
		<link>http://cczona.com/blog/why-your-healthcare-providers-website-isnt-as-great-as-youd-expect-it-to-be/</link>
		<pubDate>Mon, 09 Jul 2012 20:24:48 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=378</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>
<p>"There are various ways to ensure customers stick around as long as possible — lock-in or loyalty. Successful SaaS businesses are built on the loyalty model. Rather than holding data hostage or locking customers into long agreements, they believe that the more freedom you give customers, the more loyal they become (assuming you deliver the goods). In contrast, there’s still the antiquated model of lock-in used in many healthIT vendors. For example, they make it expensive and/or difficult to get access to data in a system to keep any in-house or 3rd party built system from being integrated. These vendors pull it over on naive customers by telling them that it’s a ton of work when it’s only a ton of work if that vendor is incompetent&hellip;.

<p>The cost and complexity of testing new models prevented many from being tried. Even today, the leading HealthIT vendor is known to charge $100 million and up for its software and it takes a long time to implement."</p>

<cite>Dave Chase, explaining in Forbes why <a href="http://www.forbes.com/sites/davechase/2012/05/16/healthit-is-terrible-thats-good-news/">&quot;Health IT is Terrible&quot;</a>
</blockquote>

<p>It's hard to watch any client spend huge sums on a clumsy implementation of an outmoded solution, let alone when excellent modern solutions are widely available and at trivial price overall.  As a consultant, it can be valuable to keep in mind that the job is to advise clients of options and to accept that they'll decide as they may.  Organizations make decisions for many reasons, and what looks irrational from the outside is often being rationally driven by internal necessity to deal with a complex array of barriers to the optimal solutions.</p>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>378</wp:post_id>
		<wp:post_date><![CDATA[2012-07-09 13:24:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-09 20:24:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[why-your-healthcare-providers-website-isnt-as-great-as-youd-expect-it-to-be]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eraser on the Drafting Table</title>
		<link>http://cczona.com/blog/eraser-on-the-drafting-table/</link>
		<pubDate>Mon, 16 Jul 2012 06:20:56 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[<blockquote>

<p>"Once you’ve made a design, it gets harder to change, so it’s best to test early and test often. As each test only takes a few minutes to set up and run, it’s something you can easily build into your timeline to complete projects on time. Remember the old saying from Frank Lloyd Wright, 'You can use an eraser on the drafting table or a sledgehammer on the construction site'"</p>

<cite><a href="http://www.uxbooth.com/blog/usability-testing-dont-guess-test/">"Usability Testing: Don't Guess, Test"</a></cite>
</blockquote>

<p>It's a good article.  You should go read the rest.<p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date><![CDATA[2012-07-15 23:20:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-16 06:20:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[eraser-on-the-drafting-table]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;Schemas for the Real World&quot;, Golden Gate Ruby Conference 2012</title>
		<link>http://cczona.com/blog/schemas-for-the-real-world-golden-gate-ruby-conference-2012/</link>
		<pubDate>Mon, 23 Jul 2012 00:22:23 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=393</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The session <a href="http://gogaruco.com/speakers.html">I'll be presenting at Golden Gate Ruby Conference 2012</a>:

<dl>
<dt><h3>"Schemas for the Real World"</h3></dt>

<dd>
<p>App development, especially for social, challenges us to evaluate how to code for the complexity of modern life. Examples include the growing range of labels people ascribe to their important relationships, sexual orientation, and gender. Users are giving push-back to questions that carry ill-fitted assumptions.</p>

<p>Facebook, Google+, and developers in many other industries are grappling with these issues. The most resilient approaches will arise from an app's own foundations. We'll look at schemas' influence on product scope, UX, and analytics. Then we'll check out a range of approaches for bringing modern realities into any app's schema, views, and logic.</p>
</dd>
</dl>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date><![CDATA[2012-07-22 17:22:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-23 00:22:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[schemas-for-the-real-world-golden-gate-ruby-conference-2012]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fix for &quot;make: /usr/bin/gcc-4.2: No such file or directory&quot;</title>
		<link>http://cczona.com/blog/fix-for-make-usrbingcc-4-2-no-such-file-or-directory/</link>
		<pubDate>Fri, 27 Jul 2012 02:53:28 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=402</guid>
		<description></description>
		<content:encoded><![CDATA[When using "<code>gem install [something]</code>" after installing Mountain Lion, you may encounter this error:

<blockquote><code>Building native extensions.  This could take a while...
ERROR:  Error installing rails:
	ERROR: Failed to build gem native extension.
&hellip;
make: /usr/bin/gcc-4.2: No such file or directory
make: *** [generator.o] Error 1
</code></blockquote>

Apple removed GCC 4.2.  We'll just put it back where <var>make</var> expects it to be.  First <a href="https://github.com/mxcl/homebrew/wiki/installation">install the package manager Homebrew</a>. Then in Terminal do:

<blockquote>
<code>$ brew tap homebrew/dupes
$ brew install apple-gcc42
$ sudo ln -s /usr/local/bin/gcc-4.2 /usr/bin/gcc-4.2</code>
</blockquote>

UPDATED: added the <code>brew tap</code> line.  As rathrio notes, for some users the extra step is necessary.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>402</wp:post_id>
		<wp:post_date><![CDATA[2012-07-26 19:53:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-07-27 02:53:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fix-for-make-usrbingcc-4-2-no-such-file-or-directory]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_tweet_this]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_clig]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_bitly]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_wp]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_yourls]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_wp_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1216</wp:comment_id>
			<wp:comment_author><![CDATA[rathrio]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rad.iyadurai@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[213.142.176.26]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2012-07-30 01:18:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2012-07-30 08:18:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some might have to enable homebrew-dupes before installing apple-gcc42:

$ brew tap homebrew/dupes]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343636282.0654";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343675097.3214";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Therapeutic Refactoring</title>
		<link>http://cczona.com/blog/therapeutic-refactoring/</link>
		<pubDate>Wed, 08 Aug 2012 23:19:18 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[<small><a href="http://abstrusegoose.com/432"><img src="http://abstrusegoose.com/strips/you_down_wit_OPC-yeah_you_know_me.png"><cite>(Credit: "O.P.C." by Abstruse Goose</cite>)</a></small>

<a href="https://twitter.com/kytrinyx">Katrina Owen</a>'s talk on what she terms "Therapeutic Refactoring" takes a fascinating approach to spaghetti code that arrives without specs or documentation. The answer is so simple it could be mistaken for TDD itself.  But "test driven development" doesn't describe how tests fit in here.  She's using tests as inquiries.  <em>"Hello, codebase. What do you do and what are you expecting?"</em>  There's a bit of awe at watching an application reveal itself to a test doing nothing.

Watch the whole thing: <a href='http://video2012.scotlandonrails.com/D2_GH_04-Ruby1280_b.mp4'>Therapeutic Refactoring, by Katrina Owen, Scottish Ruby Conference 2012</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date><![CDATA[2012-08-08 16:19:18]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-08 23:19:18]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[therapeutic-refactoring]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="linkedin"><![CDATA[linkedin]]></category>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_tweet_this]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_clig]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_bitly]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://cczona.com/blog/2012/08/therapeutic-refactoring/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_wp]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_yourls]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_wp_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:79:"Therapeutic Refactoring http://cczona.com/blog/2012/08/therapeutic-refactoring/";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[enclosure]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://video2012.scotlandonrails.com/D2_GH_04-Ruby1280_b.mp4
150572889
video/mp4
]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript for Cats</title>
		<link>http://cczona.com/blog/javascript-for-cats/</link>
		<pubDate>Sun, 19 Aug 2012 21:30:26 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=433</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://jsforcats.com/ ">JavaScript for Cats</a> is a new, quite good, intro-level JavaScript tutorial.  Nice to see <del>lazy</del> <ins>savvy</ins> use of the WebKit console incorporated into learning immediately.  

I'm looking forward to the author's promised upcoming additions of looping, objects, JSON, Node.js, and "server side catgramming".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>433</wp:post_id>
		<wp:post_date><![CDATA[2012-08-19 14:30:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-08-19 21:30:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[javascript-for-cats]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_tweet_this]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_clig]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_bitly]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://cczona.com/blog/2012/08/javascript-for-cats/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_wp]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_yourls]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_jd_target]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_wp_twitter]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_jd_post_meta_fixed]]></wp:meta_key>
			<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cool Git Tricks</title>
		<link>http://cczona.com/blog/cool-git-tricks/</link>
		<pubDate>Mon, 03 Sep 2012 20:45:53 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=437</guid>
		<description></description>
		<content:encoded><![CDATA[At the last Women Who Code Lightening Talks, I presented "Cool Git Tricks (That I learn when things go badly)", a quick and cheeky intro to some very handy features that even experienced users are frequently unaware of. [<a href="http://www.slideshare.net/cczona/cool-git-tricks">SLIDES</a>] [<a href="https://www.youtube.com/watch?v=7pgq0Yc3bJg">VIDEO</a>]

<h3>Git information to your shell prompt?!</h3>

Many said their favorite trick was the custom shell prompt (see the slides for how great this is).  They were awed that you can do that.  

Me too.  I'd first seen it in <a href="http://shop.oreilly.com/product/0636920017462.do">"McCullough and Berglund on Mastering Git"</a>, and had to know how the heck Matthew McCullough made his insaaaaane prompt. You've got to see it in action.

In fact, see the whole 5-hour video while you're at it.  Great for anyone who's been banging their head against Git for a while.  Earlier this year the team released a 4-hour followup to it, <a href="http://my.safaribooksonline.com/video/software-engineering-and-development/version-control/9781449327354">McCullough and Berglund on Mastering Advanced Git</a>.

After seeing my Cool Git Tricks presentation, <a href="http://blog.sqisland.com/2012/08/bash-prompt.html">Chiu-Ki Chan was inspired to create her own Git prompt</a> and showed code examples of what she'd done.  Here's a Gist of the code for mine, while we're at it:

<script src="https://gist.github.com/3469469.js"> </script>

Have fun playing with the examples Chiu-Ki and I have given.  Here's code for Matthew McCullough's <a href="https://gist.github.com/47267">Bash shell prompt</a> too while we're at it.

Learning how to customize your prompt like this is a tantalizing preview of what <a href="http://git-scm.com/book/en/Git-Internals-Plumbing-and-Porcelain">Git's low-level "plumbing"</a> makes possible.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date><![CDATA[2012-09-03 13:45:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-03 20:45:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cool-git-tricks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Academy of Sciences&#039; Upcoming Free Days</title>
		<link>http://cczona.com/blog/academy-of-sciences-upcoming-free-days/</link>
		<pubDate>Wed, 16 May 2012 09:20:42 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=863</guid>
		<description></description>
		<content:encoded><![CDATA[Noooooooo. <a href="http://sf.funcheap.com/california-academy-sciences-neighborhood-free-days-2012-4/">The Academy of Sciences' neighborhood free days</a> are during Maker Faire? You've got to be kidding. Target market overlap, ahoy.﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>863</wp:post_id>
		<wp:post_date><![CDATA[2012-05-16 09:20:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-05-16 09:20:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[academy-of-sciences-upcoming-free-days]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fear, Itself</title>
		<link>http://cczona.com/blog/fear-itself/</link>
		<pubDate>Wed, 25 Apr 2012 09:25:50 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=865</guid>
		<description></description>
		<content:encoded><![CDATA[Seen on the internet: "Fear is the rootkit of democracy."﻿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>865</wp:post_id>
		<wp:post_date><![CDATA[2012-04-25 09:25:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-25 09:25:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fear-itself]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mountain Lion App Store + previous install of Growl == unhappy</title>
		<link>http://cczona.com/blog/mountain-lion-app-store-previous-install-of-growl-unhappy/</link>
		<pubDate>Tue, 04 Sep 2012 22:17:30 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=464</guid>
		<description></description>
		<content:encoded><![CDATA[The new Notifications Center in Mountain Lion is a pale, pale imitation of good ol' Growl.  But after upgrading OSX, the App Store refused to update Growl.  Upon clicking the "update" button, the store kept complaining:

<blockquote><code>"You have updates available for other accounts. To update this application, sign in to the account you used to purchase it." </code></blockquote>

Don't believe it.  At least, don't assume it's returning a correct error message for your situation.  While some people do purchase software under multiple accounts, this wasn't the case here.

<h3>The actual complication:</h3>
The App Store doesn't know how to cope with a previous Growl install &mdash; even one purchased through the store and not currently running.  <aside><em>(Sidenote: Apple, yo, two flaws to fix there.)</em></aside>

<h3>How to solve it:</h3>
<ol>
<li>Download<sup>*</sup> <var><a href="http://growl.info/downloads">Growl Version Detective</a></var></li>
<li>Remove everything it identifies in the "Growl" tab. (Don't worry about the Frameworks tab)</li>
<li>Trash <var>/Applications/Growl.app</var></li>
</ol>

Voila.  The App Store's "upgrade" button is replaced by "install".  Smooth sailing from there.  Including notifications that are top-rate.  Hurrah.

<aside><small>* (Growl Uninstaller is also available to download there.  It didn't solve this successfully. But it's worth trying if the above doesn't work.)</small></aside>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date><![CDATA[2012-09-04 15:17:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-04 22:17:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mountain-lion-app-store-previous-install-of-growl-unhappy]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PS1 transformation</title>
		<link>http://cczona.com/blog/ps1-transformation/</link>
		<pubDate>Mon, 17 Sep 2012 21:32:46 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=499</guid>
		<description></description>
		<content:encoded><![CDATA[Being able to edit PS1 (the shell prompt) was an eye-opener and productivity transform. My prompt has, among much fancier things, two newlines prefixed on to it, plus colorization to make the prompt stand out from the command it's receiving. I cannot emphasize enough how much this changed my ability to catch errors and reliably connect them to the command that generated 'em. I'm a better programmer for having discovered that one small detail that PS1 is customizable.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>499</wp:post_id>
		<wp:post_date><![CDATA[2012-09-17 21:32:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-17 21:32:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[ps1-transformation]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Git &quot;corrupt patch&quot; when staging</title>
		<link>http://cczona.com/blog/git-corrupt-patch-when-staging/</link>
		<pubDate>Mon, 24 Sep 2012 08:05:09 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=509</guid>
		<description></description>
		<content:encoded><![CDATA[In an ideal world, you could check out any arbitrary commit and it's pass all tests, <i>and</i> have no bits of code trailing along that belong to another feature/issue.   Line-by-line staging is how I first got religion where Git was concerned.  Judicious use of it truly makes ideal commits feasible.  Ahhh.  Truly a Cool Git Trick.

But there's a bug.  Maybe you've seen it.  Periodically, seemingly at random, attempting to stage or unstage a line results in an patch error such as "<code>Applying patch failed with return value 128. Error: fatal: corrupt patch at line 12</code>".  Don't believe it.

The bug originates with Git-Gui, which doesn't know how to stage a line when the file doesn't end with a trailing newline (EOF).  It's been <a href="http://git.661346.n2.nabble.com/BUG-git-apply-sometimes-says-quot-corrupt-patch-quot-when-adding-single-lines-td5434443.html">a known problem since at least 2010</a> and <a href="http://stackoverflow.com/questions/12147930/fatal-corrupt-patch-at-line-xx-when-staging-single-line">it's a bug that's still around today</a>.

Add the trailing newline.  Solved.

P.S. Want to learn about staging lines with Git?  Check out <a href="http://cbx33.github.com/gitt/afterhours5-1.html">"Splitting up commits the easy way"</a> by Peter Savage.  GitX(L) and SourceTree both support this workflow really well, and (ironically) are much nicer GUIs overall.  SourceTree, by the way, doesn't show this bug.  GitX(L) does.  Bah humbug.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>509</wp:post_id>
		<wp:post_date><![CDATA[2012-09-24 01:05:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-09-24 08:05:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[git-corrupt-patch-when-staging]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Learn HTTP (and a lot of other useful webdev topics) at Confident Coding III</title>
		<link>http://cczona.com/blog/learn-http-and-a-lot-of-other-useful-webdev-topics-at-confident-coding-iii/</link>
		<pubDate>Mon, 08 Oct 2012 20:25:39 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=542</guid>
		<description></description>
		<content:encoded><![CDATA[I'm speaking October 21st at <a href="http://confidentcoding.com/">Confident Coding III ("Everything Else You Need to Know")</a>, an all-day web technology education conference for women and friends. We'll be at Microsoft's San Francisco offices at Market & Powell. Join us for a fun day of learning about developer tools, automation, HTTP, the commandline, and more. Really useful stuff.  Come!

(Pssst. Women still earn 77% of what men do. Use discount code EQUALITY to register at 77% price.)

Updated: Here's the <a href="http://www.slideshare.net/cczona/full-stack-full-circle-what-the-heck-happens-in-an-http-requestresponse-cycle">slides for "Full Stack & Full Circle: What the Heck Happens In an HTTP Request-Response Cycle"</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>542</wp:post_id>
		<wp:post_date><![CDATA[2012-10-08 13:25:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-10-08 20:25:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[learn-http-and-a-lot-of-other-useful-webdev-topics-at-confident-coding-iii]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Submitting commits to official Ruby &amp; Rails documentation</title>
		<link>http://cczona.com/blog/making-a-submit-to-the-official-ruby-docum/</link>
		<pubDate>Sat, 03 Nov 2012 20:09:01 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=551</guid>
		<description></description>
		<content:encoded><![CDATA[Done!  Submitted my very first commit for the official Ruby documentation.

<blockquote class="twitter-tweet"><p>Oh so nerve-wracking to submit a commit to the ruby/ruby repo, even a documentation fix. <a href="https://twitter.com/search/%23missionaccomplished">#missionaccomplished</a> <a href="https://twitter.com/search/%23whoohoo">#whoohoo</a>!</p>&mdash; Carina C. Zona (@cczona) <a href="https://twitter.com/cczona/status/264804451490095104" data-datetime="2012-11-03T19:01:15+00:00">November 3, 2012</a></blockquote>
<script src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

Patting myself on the back for having spotted the error.  It was over 2 months old &mdash; surprising for a standard library like URI::HTTP.  So I second-guessed myself initially.

<small><em>Surely that doc gets scrutinized by hundreds of people daily.  <small>Surely someone else would have spotted it ages ago, if it were done incorrectly.  <small>Surely I just haven't heard about some fancy new syntactical construct.  <small>Surely the fact that the example doesn't work for me is because I must've done something incorrectly.  Surely.</small></small></small></em></small>

That voice in the back of the head is noise from <a href="http://en.wikipedia.org/wiki/Impostor_syndrome">imposter syndrome</a>.  <strong>Shut up, you.</strong>

Doubt like this depends too on believing that those who have contributed to Ruby are infallible. A mythbuster, for me and for you:

<blockquote><code>$ cd ruby-official-repo
$ git log | grep -ic "typo"
842</code></blockquote>

Trust your instinct.  Verify.  Make better things happen.  Commit.

<br>

Last month I also made a first commit for the official Rails documentation, and &mdash; hooray! &mdash; it was accepted.  Though not without a brief <em>facepalm</em> moment when I accidentally submitted a big bunch of other people's commits with it.  Luckily, the railsdocs repository is maintained separately from the Rails codebase.  So it was a quick fix by doing <code>git reset --HARD</code> on master branch then the documentation maintainers and I each did a <code> git push -f</code> on our respective repos, and rebased my branch's commit back in.  Voila, solved.

It's a good example of where Git is a big win for contributor, maintainers, and collaborators.  It is also a good example of how wins like these are made easiest when developers are required to submit to an upstream via a branch rather than on top of master.

So, summary: I can now put "Rails documentation contributor" on the résumé, and hopefully soon will be able to put "Ruby documentation contributor" on it too.  Don't worry; even though I'm a cool kid now, I still want to hang out with you.

UPDATE: Mission accomplished. What fun.

<blockquote class="twitter-tweet"><p>Documentation patch accepted. I'm officially a contributor to Ruby.Neato. <a href="https://t.co/fClM01z6" title="https://bugs.ruby-lang.org/projects/ruby-trunk/repository/revisions/37472">bugs.ruby-lang.org/projects/ruby-…</a></p>&mdash; Carina C. Zona (@cczona) <a href="https://twitter.com/cczona/status/265280396726530049" data-datetime="2012-11-05T02:32:29+00:00">November 5, 2012</a></blockquote>
<script src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>551</wp:post_id>
		<wp:post_date><![CDATA[2012-11-03 13:09:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-11-03 20:09:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[making-a-submit-to-the-official-ruby-docum]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_old_slug]]></wp:meta_key>
			<wp:meta_value><![CDATA[makjing-a-submit-to-the-official-ruby-docum]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>&quot;What Next&quot; resources for RailsGirls grads in San Francisco</title>
		<link>http://cczona.com/blog/what-next-resources-for-railsgirls-grads-in-san-francisco/</link>
		<pubDate>Sun, 27 Jan 2013 07:26:21 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=620</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In an average month, San Francisco's SOMA neighborhood is host to more than 30 workshops, classes, and study groups that are:

<ul>
	<li>specifically for women to learn programming, maintain ongoing study, and enter the profession;</li>
	<li>provided by professional programmers, who teach and mentor for the sheer darned pleasure of sharing what they know and expanding the community; and</li>
	<li>all of it either completely free or else low-cost (with up to 100% scholarships available for the latter, as needed)</li>
</ul>

<p>And thosre are just the ones about the principal languages of the Rails stack: Ruby, HTML, CSS, and JavaScript.</p>

<p><aside><em>* P.S. Most throw in a free meal or two.  Several offer free childcare upon request too.</em></aside></p>

<p>Yes, 30 events per month that meet <em>all</em> of those criteria.</p>

<p>So many opportunities to see, do, learn, teach, lead, mentor.</p>

<p>This weekend I had the pleasure of volunteering at yet another of these local events.  RailsGirls held its second workshop in San Francisco; another organization easing into this vibrant mix.  Welcome, RailsGirls grads!  <a href='http://cczona.com/blog/wp-content/uploads/2013/01/RailsGirlsSF-what-next1.pdf'>Here's a couple slides introducing you to the abundance of local answers to "What's next?"</a>  I hope we'll get to see you again, soon, at several of 'em.</p>

<p>UPDATE: Fixed the hashtag. Added 2 more resources.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>620</wp:post_id>
		<wp:post_date><![CDATA[2013-01-26 23:26:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-01-27 07:26:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[what-next-resources-for-railsgirls-grads-in-san-francisco]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Email validation is harder than you think.</title>
		<link>http://cczona.com/blog/email-validation-is-harder-than-you-think/</link>
		<pubDate>Fri, 15 Mar 2013 01:51:31 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=645</guid>
		<description></description>
		<content:encoded><![CDATA[I got asked recently about email validation: <q><em>is "+" valid?</em></q>

Yes, the plus sign is a legal character in an email address.  Though even if it were not, you'd do well to accept that character since it's used by millions of Gmail users:

<ul>
  <li><a href="https://www.youtube.com/watch?v=oJ8-Q-rNvPI">Video about Gmail convenience filtering with the plus sign</a></li>
  <li><a href="http://lifehacker.com/199280/generate-unlimited-email-addresses-with-gmail"> Lifehacker, 2006</a></li>
  <li><a href="http://lifehacker.com/144397/instant-disposable-gmail-addresses">Lifehacker, 2012</a></li>
</ul>

Many surprising characters are legal in an email address.  Pretty much everybody gets email validation wrong.

<ul>
  <a href="http://davidcel.is/blog/2012/09/06/stop-validating-email-addresses-with-regex/">"Stop Validating Email Addresses with Regex"</a>
  <a href="http://idn.icann.org/E-mail_test">ICANN test for legal internationalized email address characters</a>
</ul>
If you still want to take a shot at evaluate the correctness of an email address string, at least do it with library that uses a parser and has attempted (nevertheless imperfectly) the  difficult task of complying with all the relevant RFCs.  For example:

<ul>
  <li><a href="https://github.com/cczona/mail/tree/master/lib/mail/parsers">Ruby</a></li>
  <li><a href="http://blog.dominicsayers.com/2011/03/email-address-validation/">PHP</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>645</wp:post_id>
		<wp:post_date><![CDATA[2013-03-14 18:51:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-15 01:51:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[email-validation-is-harder-than-you-think]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tech"><![CDATA[Web &amp; Technology]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Great networking opportunity during O&#039;Reilly&#039;s Fluent Conference in San Francisco</title>
		<link>http://cczona.com/blog/great-networking-opportunity-during-oreillys-fluent-conference-in-san-francisco/</link>
		<pubDate>Mon, 25 Mar 2013 13:59:00 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=686</guid>
		<description></description>
		<content:encoded><![CDATA[Meta-meetup!  CodeChix, Black Girls Code, Confident Coding, Girl Geek Dinners, among other tech women&#039;s projects/meetups.  I&#039;ve put out the word to the Railsbridge, Women Who Code, and PyLadies organizers in hopes that they&#039;ll also get on that evening&#039;s roster.<br><br>Although the meetup is a tie-in to the Fluent conference, it&#039;s open RSVP.<br><br>(If you&#039;re one of the Saturday frontend Railsbridge students in search of followup education, take note of the workshops calendar for Fluent.  20% off with coupon code, ahem.)

Kimberly Bryant</a> originally shared this post:

Great networking opportunity during O&#039;Reilly&#039;s Fluent Conference in San Francisco

<a href="http://fluentconf.com/fluent2012/public/schedule/detail/25069">Women's Communities Meetup: Fluent 2012 - O'Reilly Conferences, May 29 - 31, 2012, San Francisco, CA</a>

If you're a woman looking for like-minded communities to join, c'mon down to our meetup on Wednesday evening. In addition to great networking, you'll hear lightning pitches from groups, companies, and...
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>686</wp:post_id>
		<wp:post_date><![CDATA[2013-03-25 13:59:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-03-25 13:59:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[great-networking-opportunity-during-oreillys-fluent-conference-in-san-francisco]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[google_plus_activity_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[z12qdd2gilbsipg5j04cglshilm2ehc4tbw]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Good news for me: co-organizing Railsbridge Outreach Workshop for Women #34 is going swimmingly thanks...</title>
		<link>http://cczona.com/blog/good-news-for-me-co-organizing-railsbridge-outreach-workshop-for-women-34-is-going-swimmingly-thanks/</link>
		<pubDate>Thu, 12 Apr 2012 09:47:29 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=705</guid>
		<description></description>
		<content:encoded><![CDATA[Good news for me: co-organizing Railsbridge Outreach Workshop for Women #34 is going swimmingly thanks to <span class="proflinkWrapper"><span class="proflinkPrefix">+</span><a href="https://plus.google.com/115894880178771991476" class="proflink">Amy L.</a></span> &amp; <span class="proflinkWrapper"><span class="proflinkPrefix">+</span><a href="https://plus.google.com/101117479627038298551" class="proflink">Tina Lee</a></span>. We rock as a team. Tina and I are discovering that the Railsbridge community has done a bang-up job of documenting what we need.<br /><br />Good news for you: that makes two events for April! The frontend intro workshop with HTML/CSS/JavaScript is on 4/21 at +Twilio, then we&#039;re giving the backend intro workshop with Ruby on Rails on 4/28 at +Twitter.<br /><br />Sign up ASAP. Don&#039;t be intimidated by the wait list. A lot of people get moved up before the big day.

<a href="http://www.sfruby.info/events/60258772/">RailsBridge Workshop for Women #34 - April 27-28, 2012</a>

Friday, April 27th 5:30-8:30pm: Software Install Fest (REQUIRED) Saturday, April 28th 9:30am-4:30pm: Workshop 5pm: After-party for volunteers &amp; attendees **IMPORTANT**Please read to the bottom of ...
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>705</wp:post_id>
		<wp:post_date><![CDATA[2013-11-11 21:02:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-12 09:47:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[good-news-for-me-co-organizing-railsbridge-outreach-workshop-for-women-34-is-going-swimmingly-thanks]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[google_plus_activity_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[z12ts5ib1trqdbltd234i3fogkmne1adz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>If we&#039;re trying to bring more women and men into coding, start by listening to young learners in their...</title>
		<link>http://cczona.com/blog/if-were-trying-to-bring-more-women-and-men-into-coding-start-by-listening-to-young-learners-in-their/</link>
		<pubDate>Tue, 03 Apr 2012 05:25:32 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=708</guid>
		<description></description>
		<content:encoded><![CDATA[If we&#039;re trying to bring more women and men into coding, start by listening to young learners in their own words. These have shared useful insights, for instance. Understanding what drives their interest is critical, not just as future coders themselves (we hope!) but also as reps for a future cohort of consumers for tech products that speak to their interests/needs.

<a href="http://www.guardian.co.uk/education/2012/mar/31/young-coders-ideas-for-change?intcmp=239">Young coders: ideas for change</a>

Seven teenagers talk about how they got into coding and their thoughts on the future
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>708</wp:post_id>
		<wp:post_date><![CDATA[2013-11-11 21:02:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2012-04-03 05:25:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[if-were-trying-to-bring-more-women-and-men-into-coding-start-by-listening-to-young-learners-in-their]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[google_plus_activity_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[z13jc5eacqbshrj5g04cglshilm2ehc4tbw]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unisex Swag Shirts Are Harming Your Community</title>
		<link>http://cczona.com/blog/unisex-swag-shirts-are-harming-your-community/</link>
		<pubDate>Thu, 02 Apr 2015 21:00:19 +0000</pubDate>
		<dc:creator><![CDATA[admin]]></dc:creator>
		<guid isPermaLink="false">http://cczona.com/blog/?p=934</guid>
		<description></description>
		<content:encoded><![CDATA["Shirts! We've got your t-shirts right here!"

Except we don't. 

No one is entitled to freebies. But let's talk about why we're fond of giving free shirts to (presumably) well-paid people anyway.

I'm a developer evangelist & community builder. When it comes to software, "community" can feel like an abstraction. What does "community" even mean, right?

_A community is comprised of people who share an attribute that's important to them, that feels distinct from those who don't have it in common, and which is tied to a sense of personal identity._

"I live in San Francisco" is a statement of geographical fact; whereas "I am a San Franciscan" reflects an aspect of my identity. My sense of belonging to something that will outlast me. My passion & loyalties. San Francisco is my community. I feel this way about other things, too. Ruby community has its flaws, but it's a community I am invested in long-term regardless of what else I'm doing.

"What does this have to do with t-shirts?" you might be wondering.

Let's circle back to the question of why the heck we give away swag shirts. Some reasons:

* We need people's passive help in getting the project or brand known better.
* We want people to associate the project or brand with being cool, whether anyone knows anything else about it whatsoever.
* We want people to feel appreciated, and feel that others are being treated well too.
* We hope people feel proud to wear our logo; proud to be associated with it.
* We intend that when someone sees a crowd full of people wearing the shirt, that they'll feel they're missing out and be excited to go do something about it.
* We intend that it'll ultimately lead to questions, usage, contributions, and personal identification.
 
_Every time someone walks away with a shirt that doesn't fit them right, or there's no shirt to fit them at all, that's a lose-lose situation for us all._

* A failure to elicit help bolstering the image of the project or brand. 
* A thoughtless decision that looks decidedly uncool.
* Showing due appreciation to some, while disregarding others who equally deserve appreciation.
* Implicitly communicating that some people needn't take interest in what we're building.
* Making people feel they're missing out, then reinforcing the accuracy of that conclusion.

It is possible to build software community without caring about swag shirt inclusivity; but it makes that mission unnecessarily harder.

ere's [a nice writeup about gender-inclusive shirts](http://geekfeminism.wikia.com/wiki/T-shirts). It details what swag shirt inclusivity entails. Swag shirt inclusivity goes beyond gender considerations, but it's a solid start. 

Yep, this stuff takes effort to do well. But it serves a community builder's mission.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>934</wp:post_id>
		<wp:post_date><![CDATA[2015-04-02 21:00:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-02 21:00:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[unisex-swag-shirts-are-harming-your-community]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2348</wp:comment_id>
			<wp:comment_author><![CDATA[Wurst]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hgsshs@hgsgsh.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://led-schuhe24.de</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-16 20:53:00]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-16 20:53:00]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great thanks]]></wp:comment_content>
			<wp:comment_approved><![CDATA[trash]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1455655981.0066959857940673828125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459046904]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459046904.3582251071929931640625;s:5:"event";s:12:"status-trash";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2209</wp:comment_id>
			<wp:comment_author><![CDATA[Cora]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[chaysmagan@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-02 05:27:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-02 05:27:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I loved you comment "Every time someone walks away with a shirt that doesn't fit them right, or there's no shirt to fit them at all, that's a lose-lose situation for us all." as I have a Goodwill bag full of tech conference shirts which don't fit right.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1449034054.8769819736480712890625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1452128591.269824981689453125;s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
